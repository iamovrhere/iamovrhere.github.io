{"version":3,"sources":["contexts/Profile/actions.js","contexts/Profile/reducers.js","contexts/Profile/index.js","components/common/common.style.js","components/SelectProfile/SelectProfile.style.js","components/SelectProfile/SelectProfileComponent.js","components/SelectProfile/index.js","lib/index.js","contexts/Profile/ProfileStructure.js","contexts/Profile/middleware.js","components/EditProfile/EditProfile.style.js","components/EditProfile/EditProfileComponent.js","components/EditProfile/index.js","components/common/LinearProgressBar/LinearProgressBarComponent.js","components/common/LinearProgressBar/index.js","components/PairVote/BallotCard/BallotCardComponent.js","components/PairVote/BallotCard/index.js","components/PairVote/PairVote.style.js","components/PairVote/PairVoteComponent.js","components/PairVote/PairVoteContainer.js","components/PairVote/index.js","components/ViewList/ViewList.style.js","components/ViewList/ResultTable/EnhancedTableHeadComponent.js","components/ViewList/ResultTable/EnhancedTableToolbarComponent.js","components/ViewList/ResultTable/ResultTable.style.js","components/ViewList/ResultTable/ResultTableRowComponent.js","components/ViewList/ResultTable/ResultTableComponent.js","components/ViewList/ResultTable/index.js","lib/export.js","components/ViewList/ViewListComponent.js","components/ViewList/index.js","app/routes.js","app/App.js","app/reportWebVitals.js","contexts/App.js","index.js"],"names":["PROFILE_ADD","PROFILE_SET_CURRENT","PAIR_VOTE","PAIR_SKIP","LIST_RESET_ROWS","addProfile","newProfileId","name","nameMap","pairList","type","data","resetListRows","reducer","state","action","currentProfileId","id","profiles","Error","currentProfile","profileReducer","newProfile","list","dateTime","Date","getTime","pairs","totalComparisons","length","skipProfile","pairReducer","pairIndex","voteProfile","listReducer","winnerListId","resetRowsProfile","listId","voteListRow","score","pairNext","splice","pairSkip","skipped","getCurrentProfile","getPairs","createSelector","profile","getListValues","Object","values","getMaxScore","listValues","reduce","max","item","getTotalComparisons","getProgress","total","initialState","ProfileContext","React","createContext","ProfileProvider","props","useReducer","value","dispatch","Provider","children","AppTheme","createMuiTheme","palette","primary","main","secondary","colors","orange","breakPoint","mediumAndSmaller","CommonButton","styled","Button","PrimaryButton","attrs","variant","color","OptionalButton","CancelButton","PrimaryFab","Fab","blockMargin","ListContainer","div","useListStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","background","paper","position","overflow","maxHeight","margin","dark","borderRadius","GetStartedMessage","Paper","elevation","ListItemSecondaryText","RowComponent","progress","onClick","ListItem","button","ListItemText","Math","round","toLocaleString","SelectProfileComponent","SelectProfile","history","useContext","entries","map","getProfiles","classes","List","className","keys","setCurrentProfile","push","viewProfileList","aria-label","editProfileRoute","generateNewKey","base","substring","random","toString","createPairs","firstEntry","firstKey","firstItem","secondKey","secondItem","left","right","createPairList","listEntries","createPairListRecursive","remainder","slice","concat","resetPairList","resetList","resetEntries","result","filter","createNameMap","asyncCreateProfile","context","listText","a","split","row","image","safetyCheck","console","error","log","asyncResetListRows","listIds","resetItem","ProfileContainer","ProfileCard","ProfileName","TextField","ListTextArea","EditProfileComponent","EditProfile","useState","titleText","setTitleText","setListText","listLabel","profileNameLabel","label","placeholder","helperText","onChange","e","target","InputLabelProps","shrink","multiline","rows","rowsMax","Tooltip","title","style","visibility","IconButton","size","disabled","goBackOrHome","then","trim","BorderLinearProgress","withStyles","height","colorPrimary","grey","bar","LinearProgress","useStyles","LinearProgressWithLabel","LinearProgressBarComponent","Box","display","alignItems","mr","Typography","BallotCard","Card","imgHeight","BallotCardComponent","img","raised","CardActionArea","CardMedia","component","alt","gutterBottom","PairContainer","BallotBox","OrText","SkippedText","PairVoteComponent","leftBallot","rightBallot","skippedCount","orClickCount","setOrClickCount","castVote","votePair","LinearProgressBar","alert","skipPair","PairVoteContainer","setPairIndex","pair","setPair","reverseOrder","floor","voteQueue","useEffect","queue","nextIndex","nextPair","randomNextPair","warn","replace","selectProfileRoute","ProgressContainer","EnhancedTableHead","headCells","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","align","numeric","disablePadding","sortDirection","sortable","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","paddingLeft","spacing","paddingRight","highlight","lighten","light","flex","flexDirection","input","EnhancedTableToolbar","rankRange","onRankRangeChange","onExportRows","onClearRows","editButtonText","doneButtonText","isSelectMode","isEditMode","setIsEditMode","createChangeHandler","start","end","isNaN","Number","Toolbar","clsx","ImportExport","Delete","defaultValue","Done","Edit","container","minHeight","marginBottom","table","minWidth","border","clip","top","RowImage","ResultTableCellComponent","labelId","rank","outRow","isName","isImg","scope","src","ResultTableRowComponent","isItemSelected","handleClick","hover","role","aria-checked","tabIndex","selected","descendingComparator","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","rowsPerPageOptions","ResultTableComponent","defaultOrderBy","defaultOrder","defaultRowCount","maxScore","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","rankStart","setRankStart","rankEnd","setRankEnd","selectedIndex","indexOf","newSelected","isSelected","calculateRank","EPSILON","toFixed","delimiter","rowWidth","csvContent","join","hiddenElement","document","createElement","href","encodeURI","download","click","exportCsv","header","column","filteredRows","unshift","filterSelectedRows","TableContainer","Table","stickyHeader","aria-labelledby","newSelecteds","n","TableBody","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","ViewListComponent","listRows","resultsTitleSuffix","resultsTitle","voteOnPairs","ResultTable","homeRoute","routeComponent","path","routeList","PairVote","ViewList","goBack","App","ThemeProvider","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppContext","currentProfileKey","AppProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.09eddfce.chunk.js","sourcesContent":["export const PROFILE_ADD = 'PROFILE/ADD';\nexport const PROFILE_SET_CURRENT = 'PROFILE/SET_CURRENT';\nexport const PAIR_VOTE = 'PROFILE/PAIR/WINNER'\nexport const PAIR_SKIP = 'PROFILE/PAIR/SKIP'\nexport const LIST_EDIT = 'PROFILE/LIST/EDIT';\nexport const LIST_RESET_ROWS = 'PROFILE/LIST/RESET_ROWS';\n\n\n/////////////////////////////////////////////////////////////////////////\n// Actions\n/////////////////////////////////////////////////////////////////////////\n\n\n/**\n *\n * @param {string} newProfileId\n * @param {string} name\n * @param {Object.<string, ComparisonCandidate>} nameMap\n * @param {Object.<string, VotingPair>} pairList\n * @return {Action}\n */\nexport const addProfile = (newProfileId, name, nameMap, pairList) => ({\n  type: PROFILE_ADD,\n  data: {\n    newProfileId, name, nameMap, pairList\n  }\n});\n\n/**\n *\n * @param {string} id\n * @return {Action}\n */\nexport const setCurrentProfile = (id) => ({\n  type: PROFILE_SET_CURRENT,\n  data: {\n    id\n  }\n});\n\n/**\n *\n * @param {string} pairIndex\n * @param {string} winnerListId\n * @return {Action}\n */\nexport const votePair = (pairIndex, winnerListId) => ({\n  type: PAIR_VOTE,\n  data: {\n    pairIndex,\n    winnerListId\n  }\n});\n\n/**\n *\n * @param {string} pairIndex\n * @return {Action}\n */\nexport const skipPair = (pairIndex) => ({\n  type: PAIR_SKIP,\n  data: {\n    pairIndex\n  }\n});\n\n/**\n *\n * @param {[string]} listIds\n * @param {Object.<string, ComparisonCandidate>} nameMap\n * @param {[VotingPair]} pairList\n * @return {Action}\n */\nexport const resetListRows = (nameMap, pairList) => ({\n  type: LIST_RESET_ROWS,\n  data: {\n    nameMap, pairList\n  }\n});\n","import {\n  LIST_RESET_ROWS,\n  PAIR_SKIP,\n  PAIR_VOTE,\n  PROFILE_ADD,\n  PROFILE_SET_CURRENT,\n} from './actions';\n\n/**\n * @typedef {import('./ProfileStructure').ComparisonRow} ComparisonRow\n * @typedef {import('./ProfileStructure').ComparisonCandidate} ComparisonCandidate\n * @typedef {import('./ProfileStructure').ProfileItem} ProfileItem\n * @typedef {import('./ProfileStructure').VotingPair} VotingPair\n */\n\n/**\n * React reducer action.\n * @typedef {{\n *  type: string, data: any\n * }} Action\n */\n\n/**\n *\n * @typedef {{\n * currentProfile: string | null,\n * profiles: Object.<string, ProfileItem>\n * }} ProfileState\n */\n\n// TODO purify reducers - I'm doing too much work in these; they should\n// be pure functions (data in, minimal transformation).\n/**\n *\n * @param {ProfileState} state\n * @param {Action} action\n * @return {ProfileState}\n */\nexport function reducer(state, action) {\n  const { type, data } = action;\n  switch (type) {\n    case PROFILE_SET_CURRENT:\n      const currentProfileId = data.id;\n      if (!state.profiles[currentProfileId]) {\n        throw new Error(`Invalid profile supplied: '${currentProfileId}'`);\n      }\n      return {\n        ...state,\n        currentProfile: currentProfileId\n      };\n    case PROFILE_ADD:\n      return {\n        ...state,\n        currentProfile: data.newProfileId,\n        profiles: profileReducer(state.profiles, action, data.newProfileId)\n      };\n    case LIST_RESET_ROWS:\n    case PAIR_SKIP:\n    case PAIR_VOTE:\n      if (!state.profiles[state.currentProfile]) {\n        throw new Error(`No profile selected!`);\n      }\n      return {\n        ...state,\n        profiles: profileReducer(state.profiles, action, state.currentProfile)\n      };\n    default:\n      return state;\n  }\n}\n\n/**\n *\n * @param {Object.<string, ProfileItem>} state\n * @param {Action} action\n * @param {string} currentProfile\n */\nfunction profileReducer(state, action, currentProfile) {\n  const { type, data } = action;\n  switch (type) {\n    case PROFILE_ADD:\n      const newProfile = {};\n      newProfile[currentProfile] = {\n        name: data.name,\n        list: data.nameMap,\n        dateTime: new Date().getTime(),\n        pairs: data.pairList,\n        totalComparisons: data.pairList.length\n      };\n\n      return {\n        ...state,\n        ...newProfile\n      };\n    case PAIR_SKIP:\n      const skipProfile = {};\n      skipProfile[currentProfile] = {\n        ...state[currentProfile],\n        dateTime: new Date().getTime(),\n        pairs: pairReducer(state[currentProfile].pairs, action, data.pairIndex)\n      };\n      return {\n        ...state,\n        ...skipProfile\n      };\n    case PAIR_VOTE:\n      const voteProfile = {};\n      voteProfile[currentProfile] = {\n        ...state[currentProfile],\n        dateTime: new Date().getTime(),\n        list: listReducer(state[currentProfile].list, action, data.winnerListId),\n        pairs: pairReducer(state[currentProfile].pairs, action, data.pairIndex)\n      };\n      return {\n        ...state,\n        ...voteProfile\n      };\n    case LIST_RESET_ROWS:\n      const resetRowsProfile = {};\n      resetRowsProfile[currentProfile] = {\n        ...state[currentProfile],\n        dateTime: new Date().getTime(),\n        list: {\n          ...state[currentProfile].list,\n          ...data.nameMap\n        },\n        pairs: [\n          ...data.pairList\n        ]\n      };\n      return {\n        ...state,\n        ...resetRowsProfile\n      };\n    default:\n      return state;\n  }\n}\n\n/**\n *\n * @param {Object.<string, ComparisonCandidate>} state\n * @param {Action} action\n * @param {string} listId\n */\nfunction listReducer(state, action, listId) {\n  const { type } = action;\n  switch (type) {\n    case PAIR_VOTE:\n      const voteListRow = {}\n      voteListRow[listId] = {\n        ...state[listId],\n      };\n      voteListRow[listId].score++;\n      return {\n        ...state,\n        ...voteListRow\n      };\n    default:\n      return state;\n  }\n}\n\n/**\n *\n * @param {Object.<string, VotingPair>} state\n * @param {Action} action\n * @param {string} pairIndex\n */\nfunction pairReducer(state, action, pairIndex) {\n  const { type } = action;\n  switch (type) {\n    case PAIR_VOTE:\n      const pairNext = [\n        ...state,\n      ];\n      pairNext.splice(pairIndex, 1);\n      return pairNext;\n    case PAIR_SKIP:\n      const pairSkip = [\n        ...state,\n      ];\n      pairSkip[pairIndex].skipped++;\n      return pairSkip;\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { createSelector } from 'reselect'\nimport { reducer } from './reducers';\n\n/**\n * @typedef {import('./ProfileStructure').ComparisonRow} ComparisonRow\n * @typedef {import('./ProfileStructure').ComparisonCandidate} ComparisonCandidate\n * @typedef {import('./ProfileStructure').ProfileItem} ProfileItem\n * @typedef {import('./ProfileStructure').VotingPair} VotingPair\n * @typedef {import('./reducer').ProfileState} ProfileState\n * @typedef {import('./reducer').Action} Action\n */\n\n/////////////////////////////////////////////////////////////////////////\n// Selectors\n/////////////////////////////////////////////////////////////////////////\n\n/**\n * @param {ProfileState} state\n * @returns {[ProfileItem]}\n */\nexport const getProfiles = state => Object.entries(state.profiles)\n  .map(([id, profile]) => ({ ...profile, id }));\n\n/**\n * @param {ProfileState} state\n * @returns {ProfileItem|null} Null if no profile selected.\n */\nexport const getCurrentProfile = state => state.currentProfile ? ({\n  ...state.profiles[state.currentProfile],\n  id: state.currentProfile\n}) : null;\n\n/**\n * @return {[VotingPair]} Array of VotingPairs.\n */\nexport const getPairs = createSelector(\n  getCurrentProfile,\n  profile => profile ? profile.pairs : []\n);\n\n/**\n * @return {[ComparisonCandidate]}\n */\nexport const getListValues = createSelector(\n  getCurrentProfile,\n  profile => profile ? Object.values(profile.list) : []\n);\n\n/**\n * @return {number} The max score for the current list.\n */\nexport const getMaxScore = createSelector(\n  getListValues,\n  listValues => listValues.reduce(\n    (max, item) => max < item.score ? item.score : max,\n    0\n  )\n);\n\n/**\n * @return {number} The length of comparisons or 1 (to prevent NaN/Infinity).\n */\nexport const getTotalComparisons = createSelector(\n  getCurrentProfile,\n  (profile) => (profile && profile.totalComparisons) || 1\n);\n\n/**\n * @return {number}\n */\nexport const getProgress = createSelector(\n  getPairs,\n  getTotalComparisons,\n  (pairs, total) => pairs ? total - pairs.length : 0\n);\n\n\n/**\n* The profile state with keys for each id.\n*\n* @typedef ProfileState\n*/\nconst initialState = {\n  currentProfile: null,\n  profiles: {}\n};\n\nexport const ProfileContext = React.createContext();\n\n/**\n * @returns {{ state: ProfileState, dispatch: (Action) => {}}}\n */\nexport function ProfileProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <ProfileContext.Provider value={value}>\n      {props.children}\n    </ProfileContext.Provider>\n  );\n}\n","import {\n  Button,\n  Fab,\n  colors\n} from '@material-ui/core';\nimport styled from 'styled-components';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// https://material-ui.com/customization/default-theme/\n// Nice tool for palette mixing:\n// https://material-ui.com/customization/color/\nexport const AppTheme = createMuiTheme({\n  palette: {\n    primary: {\n      // Slightly darker than `colors.lightGreen`\n      // Better contrast and more on theme.\n      main: '#689f38',\n    },\n    secondary: colors.orange\n  },\n});\n\n// https://material-ui.com/customization/breakpoints/\n// 0px     600px    960px    1280px   1920px\nconst md = 960;\n/**\n * Usage:\n * ${breakPoint.mediumAndSmaller} {\n *    ... // styling\n *  }\n */\nexport const breakPoint = {\n  mediumAndSmaller: `@media (max-width: ${md}px)`\n};\n\nexport const CommonButton = styled(Button)`\n  &.MuiButton-root {\n    width: 10rem;\n    margin: .5rem;\n  }\n`;\n\nexport const PrimaryButton = styled(CommonButton).attrs({\n  variant: \"contained\",\n  color: \"primary\"\n})``;\n\nexport const OptionalButton = styled(CommonButton).attrs({\n  variant: \"contained\",\n})``;\n\n\nexport const CancelButton = styled(CommonButton).attrs({\n  variant: \"outlined\",\n  color: \"secondary\"\n})``;\n\nexport const PrimaryFab = styled(Fab).attrs({\n  color: \"primary\"\n})`\n  &.MuiFab-root {\n    margin: .5rem;\n  }\n`;\n","import styled from 'styled-components';\nimport {\n  Paper,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { breakPoint } from 'components/common/common.style';\n\nconst blockMargin = '1rem';\nexport const ListContainer = styled.div`\n  display: flex;\n  align-content: space-between;\n  flex-direction: column;\n  align-items: center;\n\n  margin: 2rem auto;\n\n  width: 80%;\n  max-width: 100%;\n\n  ${breakPoint.mediumAndSmaller} {\n    width: 100%;\n  }\n`;\n\nexport const useListStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 400,\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n    maxHeight: '60vh',\n    margin: blockMargin,\n    color: theme.palette.primary.dark,\n    borderRadius: '1rem'\n  },\n}));\n\n\nexport const GetStartedMessage = styled(Paper).attrs({\n  elevation: 10\n})`\n  display: flex;\n  align-items: center;\n  min-height: 20vh;\n\n  margin: ${blockMargin};\n  padding: 2rem;\n  border-radius: 1rem;\n`;\n\nexport const ListItemSecondaryText = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ProfileContext,\n  getProfiles,\n} from 'contexts/Profile';\nimport { setCurrentProfile } from 'contexts/Profile/actions';\nimport {\n  GetStartedMessage,\n  ListContainer,\n  ListItemSecondaryText,\n  useListStyles,\n} from './SelectProfile.style';\nimport {\n  editProfileRoute,\n  viewProfileList\n} from 'app/routes';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport {\n  PrimaryFab\n} from 'components/common/common.style';\n\nfunction RowComponent(props) {\n  const { id, name, dateTime, progress, totalComparisons, onClick } = props;\n\n  return (\n    <ListItem button key={id} onClick={onClick}>\n      <ListItemText\n        primary={name}\n        secondary={\n          <ListItemSecondaryText>\n            <span>{\n              `${progress}/${totalComparisons} ` +\n              `(${Math.round(progress / totalComparisons * 100)}%)`\n            }</span>\n            <span>{new Date(dateTime).toLocaleString()}</span>\n          </ListItemSecondaryText>\n        }\n\n      >\n      </ListItemText>\n    </ListItem>\n  );\n}\n\nRowComponent.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  dateTime: PropTypes.number.isRequired,\n  progress: PropTypes.number.isRequired,\n  totalComparisons: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nfunction SelectProfileComponent({ history }) {\n  const { state, dispatch } = React.useContext(ProfileContext);\n  const profiles = getProfiles(state);\n  const classes = useListStyles();\n\n  const emptyList = `Create a profile to get started (no local storage yet)`;\n  return (\n    <>\n      <ListContainer>\n        {\n          profiles.length ?\n            (\n              <List className={classes.root}>\n                {\n                  profiles.map(({ name, id, dateTime, pairs, totalComparisons }) => {\n                    const progress = totalComparisons - Object.keys(pairs).length;\n                    return (\n                      <RowComponent\n                        key={id}\n                        id={id}\n                        name={name}\n                        dateTime={dateTime}\n                        progress={progress}\n                        totalComparisons={totalComparisons}\n                        onClick={() => {\n                          dispatch(setCurrentProfile(id));\n                          history.push(viewProfileList);\n                        }}\n                      />\n                    );\n                  })\n                }\n              </List>\n            ) :\n            <GetStartedMessage>\n              {emptyList}\n            </GetStartedMessage>\n        }\n        <PrimaryFab\n          aria-label=\"add\"\n          onClick={() => history.push(editProfileRoute)}\n        >\n          <AddIcon />\n        </PrimaryFab>\n      </ListContainer>\n\n    </>\n  );\n}\n\nexport default SelectProfileComponent;\n","import SelectProfile from './SelectProfileComponent';\n\nexport default SelectProfile;\n","/**\n * Collection of simple lib/util functions.\n * Be wary of making this a dumping ground.\n */\n\n\n/**\n * @param {string} base\n * @return {string} Random key of the form: `${10CharBase}_${getTime()}_${random32Num}`\n */\nexport const generateNewKey = (base) =>\n  `${base.substring(0, 10)}_` +\n  `${new Date().getTime()}_` +\n  `${Math.random().toString(36).substring(2, 4)}`;\n\n/**\n * @return {boolean}\n */\nexport const flipCoin = () => Math.floor(Math.random() * 2) % 2 === 0;\n","\n/**\n * The individual units that are being compared.\n * @typedef {{\n  * name: string,\n  * image: string\n  * }} ComparisonRow\n  */\n\n/**\n* The individual units that are being compared, with meta-data.\n*\n* @typedef {{\n* id: string,\n* name: string,\n* image: string,\n* score: number\n* }} ComparisonCandidate\n*/\n\n/**\n * A voting pair to compare against each other.\n *\n * @typedef {{\n *  id: string,\n *  left: ComparisonCandidate,\n *  right: ComparisonCandidate,\n *  skipped: number,\n * }} VotingPair\n */\n\n/**\n* Profile items as they appear in the profiles map.\n* Where the `pairs` are \"to be voted\".\n*\n* @typedef {{\n *   id: string,\n *   name: string,\n *   list: Object.<string, ComparisonCandidate>,\n *   dateTime: number,\n *   pairs: [VotingPair],\n *   totalComparisons: number\n * }} ProfileItem\n */\n\n/**\n * This gives every combination between `firstEntry` and `list`.\n * It does not account for duplicates, so list may need to be filtered.\n *\n * @param {[string, ComparisonCandidate]} firstEntry\n * @param {Object.<string, ComparisonCandidate>} list\n * @return {[VotingPair]}\n */\nconst createPairs = (firstEntry, list) => {\n  const [firstKey, firstItem] = firstEntry;\n  return list.map(([secondKey, secondItem]) => ({\n    id: `${firstKey}${secondKey}`,\n    left: firstItem,\n    right: secondItem,\n    skipped: 0\n  }));\n};\n\n/**\n * This gives every combination between all items in `list`\n * but not against themselves & disregarding order.\n * The result is  n!/r!(n-r)!.\n *\n * @param {Object.<string, ComparisonCandidate>} list\n * @return {[VotingPair]}\n */\nexport const createPairList = (list) => {\n  const listEntries = Object.entries(list);\n  return createPairListRecursive(listEntries);\n}\n\n/**\n * This gives every combination between all items in `list`\n * but not against themselves & disregarding order.\n * The result is  n!/r!(n-r)!.\n *\n * @param {[ComparisonCandidate]} listEntries\n * @return {[VotingPair]}\n */\nconst createPairListRecursive = (listEntries) => {\n  if (listEntries.length < 2) {\n    return [];\n  }\n  // By reducing the remainder by one, we ensure no\n  // mirror duplicates.\n  const firstItem = listEntries[0];\n  const remainder = listEntries.slice(1);\n\n  const pairs = createPairs(firstItem, remainder);\n  return pairs.concat(createPairListRecursive(remainder));\n};\n\n/**\n * This gives every combination between all items in `list`\n * but not against themselves & disregarding order.\n * The result is  n!/r!(n-r)!.\n *\n * @param {Object.<string, ComparisonCandidate>} resetList\n * @param {Object.<string, ComparisonCandidate>} list\n * @return {[VotingPair]}\n */\nexport const resetPairList = (resetList, list) => {\n  const key = 0;\n  const resetEntries = Object.entries(resetList);\n  let listEntries = Object.entries(list);\n\n  return resetEntries.reduce((result, firstItem) => {\n    // We remove each matching record first, to prevent a double list.\n    listEntries = listEntries.filter((item) => firstItem[key] !== item[key]);\n    return result.concat(createPairs(firstItem, listEntries));\n  }, []);\n}\n\n/**\n * Removes all duplicates based on the name. Adds score + id.\n *\n * @param {[ComparisonRow]} list\n * @return {Object.<string, ComparisonCandidate>}\n */\nexport const createNameMap = list => list.reduce((nameMap, item) => {\n  const id = '_' + item.name;\n  nameMap[id] = {\n    ...item,\n    id,\n    score: 0,\n  };\n  return nameMap;\n}, {});\n","import { getCurrentProfile } from 'contexts/Profile';\nimport { addProfile, resetListRows } from 'contexts/Profile/actions';\nimport { generateNewKey } from 'lib';\nimport { createNameMap, createPairList, resetPairList } from './ProfileStructure';\n\n/**\n * @typedef {import('./ProfileStructure').ComparisonRow} ComparisonRow\n * @typedef {import('./ProfileStructure').ComparisonCandidate} ComparisonCandidate\n * @typedef {import('./ProfileStructure').ProfileItem} ProfileItem\n * @typedef {import('./ProfileStructure').VotingPair} VotingPair\n */\n\n// 4 spaces, because tabs are difficult in browsers.\n// TODO change to multiple space + http://\nconst SEPARATOR = '    ';\n\n/**\n * Does the process of creating the new profile + pair list.\n * Then dispatches.\n *\n * @param {{ state: any, dispatch: Function}} dispatch\n * @param {string} name\n * @param {string} listText text with a separator (current 4 tabs)\n */\nexport const asyncCreateProfile = async (context, name, listText) => {\n  const { state, dispatch } = context;\n  const list = listText.split('\\n').map((row) => {\n    const [name, image] = row.split(SEPARATOR);\n    return { name, image };\n  }).filter(({ name, image }) => name || image);\n\n  let newProfileId = generateNewKey(name);\n  let safetyCheck = 100;\n\n  // Guarantee uniqueness.\n  while (state.profiles[newProfileId]) {\n    if (safetyCheck--) {\n      newProfileId = generateNewKey(name);\n    } else {\n      console.error('Failed uniqueness 100 times! Play the lottery?')\n      break;\n    }\n  }\n\n  const nameMap = createNameMap(list);\n  const pairList = createPairList(nameMap);\n  console.log(nameMap, pairList);\n  dispatch(addProfile(newProfileId, name, nameMap, pairList));\n};\n\n/**\n * Does the process of creating the new profile + pair list.\n * Then dispatches.\n *\n * @param {{ state: any, dispatch: Function}} dispatch\n * @param {[string]} listIds\n */\nexport const asyncResetListRows = async (context, listIds) => {\n  const { state, dispatch } = context;\n  const profile = getCurrentProfile(state);\n  const nameMap = listIds.reduce((map, id) => {\n    const resetItem = { ...profile.list[id] };\n    resetItem.score = 0;\n    map[id] = resetItem;\n    return map;\n  }, {});\n  const pairList = resetPairList(nameMap, profile.list);\n  console.log(nameMap, pairList);\n  dispatch(resetListRows(nameMap, pairList));\n};\n","import {\n  Paper,\n  TextField\n} from '@material-ui/core';\nimport styled from 'styled-components';\n\n// TODO RESPONSIVE\nexport const ProfileContainer = styled.div`\n  margin: auto;\n`;\n\nexport const ProfileCard = styled(Paper).attrs({\n  elevation: 10\n})`\n  padding: 1rem;\n  border-radius: 1rem;\n`;\n\nexport const ProfileName = styled(TextField)`\n  &.MuiFormControl-root {\n    width: 95%;\n    margin: 1rem;\n  }\n`;\n\nexport const ListTextArea = styled(TextField)`\n  &.MuiFormControl-root {\n    width: 95%;\n    margin: 1rem;\n  }\n`;\n","import React from 'react';\nimport {\n  IconButton,\n  Tooltip,\n} from '@material-ui/core';\nimport {\n  EmojiObjectsOutlined as LightBulbOutlinedIcon,\n} from '@material-ui/icons';\nimport { ProfileContext } from 'contexts/Profile';\nimport { asyncCreateProfile } from 'contexts/Profile/middleware';\nimport { viewProfileList, goBackOrHome } from 'app/routes';\nimport {\n  PrimaryButton,\n  CancelButton\n} from 'components/common/common.style';\nimport {\n  ListTextArea,\n  ProfileContainer,\n  ProfileCard,\n  ProfileName,\n} from './EditProfile.style';\n\nconst SAMPLE_TITLE = 'Apples & Oranges';\nconst SAMPLE_DATA = `Honey Crisp    https://upload.wikimedia.org/wikipedia/commons/thumb/f/f4/Honeycrisp.jpg/600px-Honeycrisp.jpg\nTangerine     https://upload.wikimedia.org/wikipedia/commons/2/2a/TangerineFruit.jpg\nMandarin Orange    https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Mandarin_Oranges_%28Citrus_Reticulata%29.jpg/800px-Mandarin_Oranges_%28Citrus_Reticulata%29.jpg\nBlood Orange     https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/BloodOrange.jpg/800px-BloodOrange.jpg\nAmbrosia     https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Ambrosia_apples_2017_A3.jpg/600px-Ambrosia_apples_2017_A3.jpg\nGolden Delicious    https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Golden_delicious_apple.jpg/800px-Golden_delicious_apple.jpg\n\n`;\n\nfunction EditProfileComponent({ history }) {\n  const context = React.useContext(ProfileContext);\n  const [titleText, setTitleText] = React.useState('');\n  const [listText, setListText] = React.useState('');\n\n  // TODO TRANSLATIONS\n  const listLabel = 'List of comparable items';\n  const listPlaceholder = '\"Item 1\"    [Optional: <4-spaces> Image-URL]\\n' +\n    '\"Item 2\"    [Optional: <4-spaces> Image-URL]\\n' +\n    '\"Item 3\"    [Optional: <4-spaces> Image-URL]\\n' +\n    '\\n\\n' +\n    'Recommended for lists under 500 (124,750 comparisons)\\n' +\n    '...';\n  const listMin = 10;\n  const listMax = 20;\n\n  const profileNameLabel = \"List Name\";\n  const profileNamePlaceholder = \"What's the name of this Profile?\";\n\n\n  return (\n    <ProfileContainer>\n      <ProfileCard>\n        <ProfileName\n          aria-label={profileNameLabel}\n          label={profileNameLabel}\n          placeholder={profileNamePlaceholder}\n          helperText=\"\"\n          variant=\"outlined\"\n          onChange={(e) => {\n            setTitleText(e.target.value);\n          }}\n          value={titleText}\n          InputLabelProps={{ shrink: !!titleText }}\n        />\n        <ListTextArea\n          aria-label={listLabel}\n          label={listLabel}\n          multiline\n          rows={listMin}\n          rowsMax={listMax}\n          variant=\"outlined\"\n          placeholder={listPlaceholder}\n          onChange={(e) => {\n            setListText(e.target.value);\n          }}\n          value={listText}\n          InputLabelProps={{ shrink: !!listText }}\n        />\n        {\n          <Tooltip\n            title=\"Use Sample Content\"\n            style={{ visibility: listText ? 'hidden' : 'visible' }}\n          >\n            <IconButton\n              size=\"small\"\n              aria-label=\"Use Sample Content\"\n              onClick={() => {\n                setTitleText(SAMPLE_TITLE);\n                setListText(SAMPLE_DATA);\n              }}\n              disabled={!!listText}\n            >\n              <LightBulbOutlinedIcon />\n              Sample\n            </IconButton>\n          </Tooltip>\n        }\n      </ProfileCard>\n      <CancelButton\n        onClick={() => goBackOrHome(history)}\n      >\n        Back\n      </CancelButton>\n      <PrimaryButton\n        onClick={() => {\n          // TODO add spinner.\n          asyncCreateProfile(context, titleText, listText)\n            .then(() => history.push(viewProfileList));\n        }}\n        disabled={!listText.trim() || !titleText.trim()}\n      >\n        Save\n      </PrimaryButton>\n    </ProfileContainer>\n  );\n}\n\nexport default EditProfileComponent;\n","import EditProfile from './EditProfileComponent';\n\nexport default EditProfile;\n","/**\n * From: https://material-ui.com/components/progress/\n *\n * And modified.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 15,\n    borderRadius: 10,\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 10,\n  },\n}))(LinearProgress);\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\n/**\n * Displays a chunky linear progress bar with `value/total (progress %)`.\n * @param {{\n  value: number,\n  total: number,\n  * }} props\n */\nfunction LinearProgressWithLabel(props) {\n  const classes = useStyles();\n  const { value, total } = props;\n  const progress = value / total * 100;\n  return (\n    <Box display=\"flex\" alignItems=\"center\" className={classes.root}>\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress\n          variant=\"determinate\"\n          {...props}\n          value={progress}\n          height={40}\n        />\n      </Box>\n      <Box>\n        <Typography variant=\"body2\">\n          {`${value}/${total}`}&nbsp;\n          {`(${Math.round(progress)}%)`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  value: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default LinearProgressWithLabel;\n\n","import LinearProgressBarComponent from './LinearProgressBarComponent';\n\nexport default LinearProgressBarComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardActionArea,\n  CardMedia,\n  Typography,\n} from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst imgHeight = 250;\nconst minHeight = imgHeight + 80;\nconst BallotCard = styled(Card)`\n  display: flex;\n  min-height: ${minHeight}px;\n  min-width: ${minHeight}px;\n  border-radius: .5rem;\n\n  h2 {\n    padding: 0 1rem;\n    overflow: ellipsis;\n  }\n`;\n\n/**\n * Creates a single ballot image card.\n * If there's no image, it'll just render the text is squarish card.\n *\n * @param {{\n  img: null|string,\n  title: string,\n  onClick: Function\n  * }} param0\n */\nfunction BallotCardComponent({ img, title, onClick }) {\n  return (\n    <BallotCard raised={true}>\n      <CardActionArea onClick={onClick}>\n        {\n          img &&\n          <CardMedia\n            component=\"img\"\n            alt={title}\n            height={imgHeight}\n            image={img}\n            title={title}\n          />\n        }\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n      </CardActionArea>\n    </BallotCard>\n  );\n}\n\nBallotCardComponent.propTypes = {\n  img: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default BallotCardComponent;\n","import BallotCardComponent from './BallotCardComponent';\n\nexport default BallotCardComponent;\n","import styled from 'styled-components';\nimport { breakPoint } from 'components/common/common.style';\n\n// TODO RESPONSIVE\nexport const PairContainer = styled.div`\n  display: flex;\n  align-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n`;\n\nexport const BallotBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-top: 2rem;\n\n  > * {\n    max-width: 45%;\n    flex-grow: 1;\n  }\n\n  ${breakPoint.mediumAndSmaller} {\n    flex-direction: column;\n    > * {\n      max-width: unset;\n      width: 100%;\n    }\n  }\n`;\n\nexport const OrText = styled.div`\n  margin: 1rem;\n  flex-grow: unset;\n`;\n\nexport const SkippedText = styled.div`\n  margin-top: 1rem;\n  font-size: 1rem;\n  color: rgba(255, 255, 255, 0.7);\n`;\n","import React from 'react';\nimport { goBackOrHome } from 'app/routes';\nimport { ProfileContext } from 'contexts/Profile';\nimport { votePair, skipPair } from 'contexts/Profile/actions';\nimport {\n  OptionalButton,\n  CancelButton\n} from 'components/common/common.style';\nimport LinearProgressBar from 'components/common/LinearProgressBar';\nimport BallotCard from './BallotCard';\nimport {\n  BallotBox,\n  PairContainer,\n  OrText,\n  SkippedText,\n} from './PairVote.style';\n\n/**\n * Silly easter egg.\n */\nconst orClickThreshold = 20;\n\n/**\n *\n * @param {number} skipped\n * @return {string}\n */\nconst skippedPhrase = (skipped) => (skipped === 1) ?\n  `1 time` : `${skipped} times`;\n\nfunction PairVoteComponent({\n  history,\n  pairIndex,\n  leftBallot,\n  rightBallot,\n  skippedCount,\n  progress,\n  totalComparisons\n}) {\n  const { dispatch } = React.useContext(ProfileContext);\n\n  const [orClickCount, setOrClickCount] = React.useState(0);\n\n  const castVote = (pairIndex, id) => {\n    dispatch(votePair(pairIndex, id));\n    setOrClickCount(0);\n    console.log(`Voted for: ${id}`);\n  };\n\n  return (\n    leftBallot && rightBallot ?\n      <PairContainer>\n        <LinearProgressBar value={progress} total={totalComparisons} />\n        <BallotBox>\n          <BallotCard\n            img={leftBallot.image}\n            title={leftBallot.name}\n            onClick={() => castVote(pairIndex, leftBallot.id)}\n          />\n          <OrText onClick={() => {\n            setOrClickCount(orClickCount + 1);\n            if (orClickCount && orClickCount % orClickThreshold === 0) {\n              alert(`You chose \"OR\", very funny!`);\n            }\n          }}>\n            OR\n        </OrText>\n          <BallotCard\n            img={rightBallot.image}\n            title={rightBallot.name}\n            onClick={() => castVote(pairIndex, rightBallot.id)}\n          />\n        </BallotBox>\n        <SkippedText>Skipped: {skippedPhrase(skippedCount)}</SkippedText>\n        <OptionalButton\n          onClick={() => {\n            dispatch(skipPair(pairIndex));\n            console.log(`Skipped: ${rightBallot.id} vs. ${leftBallot.id}`);\n          }}\n        >\n          Skip\n      </OptionalButton>\n        <CancelButton\n          onClick={() => goBackOrHome(history)}\n        >\n          Back\n      </CancelButton>\n      </PairContainer> :\n      null\n  );\n}\n\nexport default PairVoteComponent;\n","import React from 'react';\nimport { selectProfileRoute, goBackOrHome } from 'app/routes';\nimport { flipCoin } from 'lib';\nimport {\n  ProfileContext,\n  getCurrentProfile,\n  getPairs,\n  getProgress,\n  getTotalComparisons,\n} from 'contexts/Profile';\nimport PairVoteComponent from './PairVoteComponent';\n\nconst randomNextPair = (queue) => {\n  const nextIndex = Math.floor(Math.random() * queue.length);\n  const nextPair = queue.length ? queue[nextIndex] : [];\n  return {\n    nextIndex,\n    nextPair\n  }\n};\n\nfunction PairVoteContainer(props) {\n  const { history } = props;\n  const { state } = React.useContext(ProfileContext);\n\n  const [pairIndex, setPairIndex] = React.useState(null);\n  const [pair, setPair] = React.useState(null);\n  const reverseOrder = flipCoin();\n\n  const voteQueue = getPairs(state);\n  const progress = getProgress(state);\n  const totalComparisons = getTotalComparisons(state);\n\n  React.useEffect(() => {\n    if (progress >= totalComparisons) {\n      goBackOrHome(history);\n    }\n  }, [history, progress, totalComparisons])\n\n  React.useEffect(() => {\n    const { nextIndex, nextPair } = randomNextPair(voteQueue);\n    setPairIndex(nextIndex);\n    setPair(nextPair);\n  }, [voteQueue]);\n\n\n  if (!getCurrentProfile(state)) {\n    console.warn('Whoops! No profile selected!');\n    history.replace(selectProfileRoute);\n    return null;\n  }\n\n  return (\n    pair ?\n      <PairVoteComponent\n        {...props}\n        pairIndex={pairIndex}\n        leftBallot={reverseOrder ? pair.right : pair.left}\n        rightBallot={reverseOrder ? pair.left : pair.right}\n        skippedCount={pair.skipped}\n        progress={progress}\n        totalComparisons={totalComparisons}\n      /> :\n      null\n  );\n}\n\nexport default PairVoteContainer;\n","import PairVoteContainer from './PairVoteContainer';\n\nexport default PairVoteContainer;\n","import styled from 'styled-components';\nimport { breakPoint } from 'components/common/common.style';\n\nexport const ListContainer = styled.div`\n  display: flex;\n  align-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n  width: 80%;\n  max-width: 100%;\n\n  ${breakPoint.mediumAndSmaller} {\n    width: 100%;\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  margin: 1rem 0;\n`;\n","/**\n * Modified from: https://material-ui.com/components/tables/#sorting-amp-selecting\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Checkbox,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n} from '@material-ui/core';\n\n/**\n *\n * @param {{\n    headCells: [TableData]\n    classes: object\n    onSelectAllClick: Function,\n    order: string,\n    orderBy: string,\n    numSelected: number,\n    rowCount: number\n    onRequestSort: Function\n  }} props\n */\nconst EnhancedTableHead = (props) => {\n  const {\n    headCells,\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all items' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {\n              headCell.sortable ?\n                (<TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : 'asc'}\n                  onClick={createSortHandler(headCell.id)}\n                >\n                  {headCell.label}\n                  {orderBy === headCell.id ? (\n                    <span className={classes.visuallyHidden}>\n                      {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                    </span>\n                  ) : null}\n                </TableSortLabel>) :\n                headCell.label\n            }\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nEnhancedTableHead.propTypes = {\n  headCells: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    numeric: PropTypes.bool.isRequired,\n    disablePadding: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    sortable: PropTypes.bool.isRequired,\n  })),\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","/**\n * Modified from: https://material-ui.com/components/tables/#sorting-amp-selecting\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  IconButton,\n  TextField,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport {\n  ImportExport as ImportExportIcon,\n  Delete as DeleteIcon,\n  Done as DoneIcon,\n  Edit as EditIcon,\n} from '@material-ui/icons';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight: {\n    borderRadius: '1rem',\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(1),\n  },\n  title: {\n    flex: '1 1 100%',\n    flexDirection: 'column'\n  },\n  input: {\n    margin: '0 1rem'\n  }\n}));\n\n/**\n * Creates title of the table OR the toolbar when in select mode.\n *\n * @param {{\n  *  numSelected: number,\n  *  title: string,\n  *  rankRange: {start, end},\n  *  onRankRangeChange: Function,\n  *  onExportRows: Function,\n  *  onClearRows: Function,\n  * }} props\n  */\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {\n    title,\n    numSelected,\n    rankRange,\n    onRankRangeChange,\n    onExportRows,\n    onClearRows\n  } = props;\n\n  const editButtonText = \"Edit Ranges\";\n  const doneButtonText = \"Done\";\n\n  const isSelectMode = numSelected > 0;\n  const [isEditMode, setIsEditMode] = React.useState(false);\n\n  /**\n   * Creates a lambda for the onChange event.\n   * Includes safety for preventing letter inputs\n   * (firefox will set the value as blank even with type number).\n   *\n   * @param {{start: boolean, end: boolean}} param0\n   */\n  const createChangeHandler = ({ start, end }) => (event) => {\n    const value = event.target.value\n    if (isNaN(value) || value === \"\") {\n      return;\n    }\n    onRankRangeChange({\n      start: Number(start === true ? value : rankRange.start),\n      end: Number(end === true ? value : rankRange.end),\n    });\n  };\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: isSelectMode,\n      })}\n    >\n      {isSelectMode ? (\n        <>\n          <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n            {numSelected} selected\n          </Typography>\n          <Tooltip title=\"Export rows\">\n            <IconButton aria-label=\"Export rows\" onClick={onExportRows}>\n              <ImportExportIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Clear rows\">\n            <IconButton aria-label=\"Clear rows\" onClick={onClearRows}>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </>\n      ) : (\n          isEditMode ? (\n            <>\n              <div className={classes.title}>\n                <TextField\n                  id=\"start-range\"\n                  className={classes.input}\n                  label=\"Rank Start\"\n                  type=\"number\"\n                  defaultValue={rankRange.start}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={createChangeHandler({ start: true })}\n                />\n                <TextField\n                  id=\"end-range\"\n                  className={classes.input}\n                  label=\"Rank End\"\n                  type=\"number\"\n                  defaultValue={rankRange.end}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={createChangeHandler({ end: true })}\n                />\n              </div>\n              <Tooltip title={doneButtonText}>\n                <IconButton\n                  aria-label={doneButtonText}\n                  onClick={() => setIsEditMode(false)}\n                >\n                  <DoneIcon />\n                </IconButton>\n              </Tooltip>\n            </>\n          ) :\n            (\n              <>\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                  {title}\n                </Typography>\n                <Tooltip title={editButtonText}>\n                  <IconButton\n                    aria-label={editButtonText}\n                    onClick={() => setIsEditMode(true)}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                </Tooltip>\n              </>\n            )\n        )\n      }\n    </Toolbar >\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  rankRange: PropTypes.shape({\n    start: PropTypes.number.isRequired,\n    end: PropTypes.number.isRequired\n  }),\n  onRankRangeChange: PropTypes.func.isRequired,\n  onExportRows: PropTypes.func.isRequired,\n  onClearRows: PropTypes.func.isRequired\n};\n\nexport default EnhancedTableToolbar;\n","import styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    minHeight: 200,\n    maxHeight: 440,\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n    borderRadius: '1rem'\n  },\n  table: {\n    minWidth: 200,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport const RowImage = styled.img`\n  width: 100%;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Checkbox,\n  TableCell,\n  TableRow,\n} from '@material-ui/core';\nimport {\n  RowImage,\n} from './ResultTable.style';\n\n\nconst ResultTableCellComponent = ({\n  headCell,\n  row,\n  labelId,\n  rank\n}) => {\n  const outRow = { ...row, rank };\n  const { id, numeric } = headCell;\n  const isName = id === 'name';\n  const isImg = id === 'image';\n  // We want name to be the field to grow.\n  const width = isName ? null :\n    (isImg ? 100 : 30);\n\n  return (\n    <TableCell\n      align={numeric ? 'right' : 'left'}\n      id={isName ? labelId : null}\n      component={isName ? 'th' : null}\n      scope={isName ? 'row' : null}\n      width={width}\n    >\n      {\n        isImg ?\n          (outRow.image && <RowImage\n            src={outRow.image}\n            alt={outRow.name}\n          />) :\n          outRow[id]\n      }\n    </TableCell>\n  );\n};\n\nResultTableCellComponent.propTypes = {\n  headCell: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    numeric: PropTypes.bool.isRequired,\n    disablePadding: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n  }),\n  row: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n  }),\n  labelId: PropTypes.string.isRequired,\n  rank: PropTypes.string.isRequired,\n};\n\n/**\n * Renders each row of the result table; deciding values and layout.\n *\n * @param {{\n *  headCells: [TableData],\n *  row: string,\n *  labelId: string,\n *  isItemSelected: boolean,\n *  handleClick: Function,\n *  rank: string,\n * }} props\n */\nconst ResultTableRowComponent = ({\n  headCells,\n  row,\n  labelId,\n  isItemSelected,\n  handleClick,\n  rank,\n}) => {\n  return (\n    <TableRow\n      hover\n      onClick={(event) => handleClick(event, row.id)}\n      role=\"checkbox\"\n      aria-checked={isItemSelected}\n      tabIndex={-1}\n      key={row.id}\n      selected={isItemSelected}\n    >\n      <TableCell padding=\"checkbox\">\n        <Checkbox\n          checked={isItemSelected}\n          inputProps={{ 'aria-labelledby': labelId }}\n        />\n      </TableCell>\n      {headCells.map((headCell) => (\n        <ResultTableCellComponent\n          key={`${headCell.id}-${row.id}`}\n          headCell={headCell}\n          row={row}\n          labelId={labelId}\n          rank={rank}\n        />\n      ))}\n    </TableRow>\n  );\n};\n\nResultTableRowComponent.propTypes = {\n  headCells: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    numeric: PropTypes.bool.isRequired,\n    disablePadding: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n  })),\n  row: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n  }),\n  labelId: PropTypes.string.isRequired,\n  isItemSelected: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  rank: PropTypes.string.isRequired,\n};\n\nexport default ResultTableRowComponent;\n","/**\n * Modified from: https://material-ui.com/components/tables/#sorting-amp-selecting\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport { exportCsv } from 'lib/export';\nimport EnhancedTableHead from './EnhancedTableHeadComponent';\nimport EnhancedTableToolbar from './EnhancedTableToolbarComponent';\nimport ResultTableRow from './ResultTableRowComponent';\nimport {\n  useStyles,\n} from './ResultTable.style';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n/**\n * Expected structure of the table data.\n * @typedef {{\n  * id: string,\n  * rank: number,\n  * name: string,\n  * image: string,\n  * score: number }} TableData\n  */\n\n/**\n * Correlates to `createRowData()`.\n * Ranks is calculated later.\n */\nconst headCells = [\n  { id: 'score', numeric: true, disablePadding: true, label: 'Score', sortable: true },\n  { id: 'image', numeric: false, disablePadding: false, label: 'Image', sortable: false },\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name', sortable: true },\n  { id: 'rank', numeric: true, disablePadding: false, label: 'Rank', sortable: false },\n];\n\nconst rowsPerPageOptions = [10, 25, 100, 1000];\n\n/**\n * Creates the enhanced table with sortable headers, defined order,\n * and selectable rows.\n *\n * @param {{\n *  title: string,\n *  rows: [{id: string, name: string, image: string, score: number}]\n *  headCells: [TableData],\n *  defaultOrder: string,\n *  defaultOrderBy: string,\n *  defaultRowCount: number,\n *  maxScore: number,\n *  onClearRows: Function.\n * }} props\n */\nconst EnhancedTable = (props) => {\n  const {\n    title,\n    rows,\n    defaultOrderBy,\n    defaultOrder,\n    defaultRowCount,\n    maxScore,\n    onClearRows\n  } = props;\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(defaultOrder);\n  const [orderBy, setOrderBy] = React.useState(defaultOrderBy);\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(defaultRowCount);\n  const [rankStart, setRankStart] = React.useState(1);\n  const [rankEnd, setRankEnd] = React.useState(10);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (id) => selected.indexOf(id) !== -1;\n\n  /**\n   * @param {number} score\n   * @return {string} The formatted rank.\n   */\n  const calculateRank = (score) => {\n    const rankOffset = rankStart;\n    const rankValueRange = rankEnd - rankStart;\n    const scorePercent = score / maxScore || 0;\n    const rank = rankValueRange * scorePercent + rankOffset;\n    const fixedDecimal = 2;\n    const rankRounded = Math.round((rank + Number.EPSILON) * 100) / 100;\n    return rankRounded.toFixed(fixedDecimal);\n  };\n\n  /**\n   * @return {[[string]]} An array of array of strings.\n   * In the order of `headerCells`, filtered with `isSelected`.\n   */\n  const filterSelectedRows = () => {\n    const header = headCells.map((column) => column.label);\n    let filteredRows = stableSort(rows, getComparator(order, orderBy))\n      .filter((value) => isSelected(value.id))\n      .map((row) => headCells.map((column) => (\n        column.id === 'rank' ? calculateRank(row.score) : row[column.id]\n      )));\n    filteredRows.unshift(header);\n    return filteredRows;\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          title={title}\n          numSelected={selected.length}\n          rankRange={{ start: rankStart, end: rankEnd }}\n          onRankRangeChange={({ start, end }) => {\n            setRankStart(start);\n            setRankEnd(end);\n          }}\n          onExportRows={() => {\n            const filtered = filterSelectedRows();\n            exportCsv(filtered, '\\t', title);\n          }}\n          onClearRows={() => {\n            onClearRows(selected);\n          }}\n        />\n        <TableContainer className={classes.container}>\n          <Table\n            stickyHeader\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              headCells={headCells}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <ResultTableRow\n                      key={labelId}\n                      headCells={headCells}\n                      row={row}\n                      labelId={labelId}\n                      isItemSelected={isItemSelected}\n                      handleClick={handleClick}\n                      rank={calculateRank(row.score)}\n                    />\n                  );\n                })}\n\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={rowsPerPageOptions}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n\n    </div >\n  );\n}\n\nEnhancedTable.propTypes = {\n  rows: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n  })),\n  maxScore: PropTypes.number.isRequired,\n  defaultOrder: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  defaultOrderBy: PropTypes.oneOf([\n    'name', 'score'\n  ]).isRequired,\n  defaultRowCount: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  onClearRows: PropTypes.func.isRequired,\n};\n\nexport default EnhancedTable;\n","import ResultTableComponent from './ResultTableComponent.js';\n\nexport default ResultTableComponent;\n","const csvHeader = \"data:text/csv;charset=utf-8,\";\n\n/**\n * Generates the CSV content from rows.\n * Then uses a hidden element to prompt the CSV.\n *\n * @param {[[string]]} rows An array of arrays\n * @param {string} delimiter\n * @param {string} title Function will append .csv\n * @throws Error If there's a mismatched row\n */\nexport const exportCsv = (rows, delimiter, title) => {\n  let rowWidth = 0;\n  const csvContent = csvHeader + rows.map((row, index) => {\n    if (!rowWidth) {\n      rowWidth = row.length;\n    }\n    if (rowWidth !== row.length) {\n      throw new Error(\n        `Mismatched length; expected ${rowWidth} received ${row.length} ` +\n        `at row ${index}`\n      );\n    }\n    return row.join(delimiter);\n  }).join('\\r\\n');\n\n  const hiddenElement = document.createElement('a');\n  hiddenElement.href = encodeURI(csvContent);\n  hiddenElement.target = '_blank';\n\n  //provide the name for the CSV file to be downloaded\n  hiddenElement.download = `${title}.csv`;\n  hiddenElement.click();\n};\n","import React from 'react';\nimport {\n  ProfileContext,\n  getCurrentProfile,\n  getListValues,\n  getMaxScore,\n  getProgress,\n  getTotalComparisons,\n} from 'contexts/Profile';\nimport { asyncResetListRows } from 'contexts/Profile/middleware';\nimport {\n  selectProfileRoute,\n  voteOnPairs\n} from 'app/routes';\nimport {\n  PrimaryButton,\n  CancelButton\n} from 'components/common/common.style';\nimport LinearProgressBar from 'components/common/LinearProgressBar';\nimport {\n  ListContainer,\n  ProgressContainer,\n} from './ViewList.style';\nimport ResultTable from './ResultTable'\n\nconst defaultOrderBy = 'score';\nconst defaultOrder = 'desc';\nconst defaultRowCount = 25;\n\nconst resultsStartTitle = ': Ready to start!';\nconst resultsPartial = '(Partial)';\nconst resultsFinal = '(Results)';\n\nfunction ViewListComponent({ history }) {\n  const { state, dispatch } = React.useContext(ProfileContext);\n  const profile = getCurrentProfile(state);\n  console.log(state);\n\n  if (!profile) {\n    console.warn('Whoops! No profile selected!');\n    history.replace(selectProfileRoute);\n    return null;\n  }\n\n  const progress = getProgress(state);\n  const totalComparisons = getTotalComparisons(state);\n  const maxScore = getMaxScore(state);\n  const listRows = getListValues(state);\n\n  const resultsTitleSuffix = progress ?\n    (progress >= totalComparisons ? resultsFinal : resultsPartial) :\n    resultsStartTitle;\n  const resultsTitle = `${profile.name} ${resultsTitleSuffix}`;\n\n  return (\n    <ListContainer>\n      <ProgressContainer>\n        <LinearProgressBar\n          value={progress}\n          total={totalComparisons}\n        />\n        {\n          (progress < totalComparisons) &&\n          (<PrimaryButton\n            onClick={() => history.push(voteOnPairs)}\n          >\n            {progress ? 'Continue' : 'Start'}\n          </PrimaryButton>)\n        }\n\n      </ProgressContainer>\n\n      <ResultTable\n        rows={listRows}\n        maxScore={maxScore}\n        defaultOrderBy={defaultOrderBy}\n        defaultOrder={defaultOrder}\n        defaultRowCount={defaultRowCount}\n        title={resultsTitle}\n        onClearRows={(listIds) => (\n          // TODO add spinner.\n          asyncResetListRows({ state, dispatch }, listIds)\n        )}\n      />\n      <CancelButton\n        onClick={() => history.replace(selectProfileRoute)}\n      >\n        Switch Profiles\n      </CancelButton>\n    </ListContainer>\n  );\n}\n\nexport default ViewListComponent;\n","import ViewListComponent from './ViewListComponent';\n\nexport default ViewListComponent;\n","import SelectProfile from 'components/SelectProfile';\nimport EditProfile from 'components/EditProfile';\nimport PairVote from 'components/PairVote';\nimport ViewList from 'components/ViewList';\n\n/**\n * See: react-router-dom\n * @typedef {{\n *  goBack: Function, replace: Function\n * }} history\n */\n\nexport const selectProfileRoute = '/';\nexport const editProfileRoute = '/edit-profile';\nexport const viewProfileList = '/list';\nexport const voteOnPairs = '/vote-pair';\nexport const homeRoute = selectProfileRoute;\n\n/**\n * @param {string} path\n * @param {JSX.Element} component\n * @return {{path: string, component: JSX.Element}}\n */\nconst routeComponent = (path, component) => ({ path, component });\n\n/**\n * Array of routes to their components.\n * (Array to guarantee order).\n */\nexport const routeList = [\n  routeComponent(voteOnPairs, PairVote),\n  routeComponent(viewProfileList, ViewList),\n  routeComponent(editProfileRoute, EditProfile),\n  routeComponent(selectProfileRoute, SelectProfile),\n];\n\n/**\n * Way to safely go back, regardless of where you start.\n *\n * @param {history} history\n */\nexport const goBackOrHome = (history) => {\n  if (history.length > 1) {\n    history.goBack();\n  } else {\n    history.replace(homeRoute);\n  }\n};\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { } from 'react-transition-group';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport { routeList } from './routes';\nimport { AppTheme } from 'components/common/common.style';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"app\">\n        <div className=\"app-body\">\n          <ThemeProvider theme={AppTheme}>\n            <Router basename={process.env.PUBLIC_URL}>\n              <Switch>\n                {\n                  routeList.map(({ path, component }) => (\n                    <Route key={path} path={path} component={component} />\n                  ))\n                }\n              </Switch>\n            </Router>\n          </ThemeProvider>\n        </div>\n      </div>\n      <div className=\"build-info\">\n        Release: {process.env.BUILD_INFO}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nexport const AppContext = React.createContext();\n\n// TODO clean up the profile vs. Profile.js\nconst PROFILE_ADD = 'PROFILE/ADD';\nconst PROFILE_SET_CURRENT = 'PROFILE/SET_CURRENT';\n\n/**\n * React reducer action.\n * @typedef {{\n *  type: string, data: any\n * }} Action\n */\n\n/**\n * Dispatch action.\n *\n * @param {string} key\n * @return {Action}\n */\nexport const setCurrentProfile = (key) => ({\n  type: PROFILE_ADD,\n  data: key\n});\n\n/**\n * Dispatch action.\n *\n * @param {string} name\n * @param {string} key\n * @return {Action}\n */\nexport const addProfile = (name, key) => ({\n  type: PROFILE_ADD,\n  data: {\n    name,\n    key\n  }\n});\n\n/**\n * Base store.\n * @typedef {{\n  currentProfile: null,\n  profiles: {{name: string, key: string}}\n  * }} BaseState\n  */\nconst initialState = {\n  currentProfileKey: null,\n  profiles: []\n};\n\n\n/**\n *\n * @param {initialState} state\n * @param {Action} action\n * @return {initialState}\n */\nfunction reducer(state, action) {\n  switch (action.type) {\n    case PROFILE_ADD:\n      return {\n        ...state,\n        profiles: [...state.profiles, action.data]\n      };\n    case PROFILE_SET_CURRENT:\n      return {\n        ...state,\n        currentProfileKey: action.data\n      };\n    default:\n      return state;\n  }\n}\n\n/**\n * @returns {{ state: initialState, dispatch: (Action) => {}}}\n */\nexport function AppProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <AppContext.Provider value={value}>\n      {props.children}\n    </AppContext.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './app/reportWebVitals';\nimport { AppProvider } from './contexts/App';\nimport { ProfileProvider } from './contexts/Profile';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <ProfileProvider>\n        <App />\n      </ProfileProvider>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}