{"version":3,"sources":["lib/localStorage.js","contexts/Profile/actions.js","contexts/Profile/reducers.js","contexts/Profile/index.js","components/common/common.style.js","components/SelectProfile/SelectProfile.style.js","components/SelectProfile/SelectProfileComponent.js","components/SelectProfile/index.js","lib/index.js","contexts/Profile/ProfileStructure.js","contexts/Profile/middleware.js","components/EditProfile/EditProfile.style.js","components/EditProfile/EditProfileComponent.js","components/EditProfile/index.js","components/common/LinearProgressBar/LinearProgressBarComponent.js","components/common/LinearProgressBar/index.js","components/PairVote/BallotCard/BallotCardComponent.js","components/PairVote/BallotCard/index.js","components/PairVote/PairVote.style.js","components/PairVote/PairVoteComponent.js","components/PairVote/PairVoteContainer.js","components/PairVote/index.js","components/ViewList/ViewList.style.js","components/ViewList/ResultTable/EnhancedTableHeadComponent.js","components/ViewList/ResultTable/EnhancedTableToolbarComponent.js","components/ViewList/ResultTable/ResultTable.style.js","components/ViewList/ResultTable/ResultTableRowComponent.js","components/ViewList/ResultTable/ResultTableComponent.js","components/ViewList/ResultTable/index.js","lib/export.js","components/ViewList/ViewListComponent.js","components/ViewList/index.js","app/routes.js","app/App.js","app/reportWebVitals.js","contexts/App.js","index.js"],"names":["valueCache","PROFILE_ADD","PROFILE_SET_CURRENT","PROFILE_RESTORE_STATE","PAIR_VOTE","PAIR_SKIP","LIST_RESET_ROWS","addProfile","newProfileId","name","nameMap","pairList","type","data","resetListRows","reducer","state","action","profileState","currentProfileId","id","profiles","Error","currentProfile","profileReducer","rootReducer","updatedAtTime","Date","getTime","newProfile","list","dateTime","pairs","totalComparisons","length","skipProfile","pairReducer","pairIndex","voteProfile","listReducer","winnerListId","resetRowsProfile","listId","voteListRow","score","resetPairs","filter","pair","index","findIndex","pairCheck","rid","pairNext","splice","pairSkip","skipped","getCurrentProfile","getPairs","createSelector","profile","getListValues","Object","values","getMaxScore","listValues","reduce","max","item","getTotalComparisons","getProgress","total","getUpdatedAtTime","initialState","ProfileContext","React","createContext","ProfileProvider","props","useReducer","dispatch","key","initialValue","getValue","rawItem","window","localStorage","getItem","JSON","parse","error","console","value","valueString","stringify","setItem","useLocalStorage","storageState","setStorageState","storedUpdatedAt","currentUpdatedAt","isStoredStale","useEffect","storedProfile","Provider","children","AppTheme","createMuiTheme","palette","primary","main","secondary","colors","orange","breakPoint","mediumAndSmaller","CommonButton","styled","Button","PrimaryButton","attrs","variant","color","OptionalButton","CancelButton","PrimaryFab","Fab","blockMargin","ListContainer","div","useListStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","background","paper","position","overflow","maxHeight","margin","dark","borderRadius","GetStartedMessage","Paper","elevation","ListItemSpaceBetweenText","RowComponent","listLength","progress","onClick","ListItem","button","ListItemText","Math","round","toLocaleString","SelectProfileComponent","SelectProfile","history","useContext","entries","map","getProfiles","classes","List","className","setCurrentProfile","push","viewProfileList","aria-label","editProfileRoute","generateNewKey","base","substring","random","toString","createPairs","firstEntry","firstKey","firstItem","secondKey","secondItem","left","right","createPairList","listEntries","createPairListRecursive","remainder","slice","concat","resetPairList","resetList","resetEntries","result","createNameMap","asyncCreateProfile","context","listText","a","split","row","image","safetyCheck","log","asyncResetListRows","listIds","resetItem","ProfileContainer","ProfileCard","ProfileName","TextField","ListTextArea","EditProfileComponent","EditProfile","useState","titleText","setTitleText","setListText","listLabel","profileNameLabel","label","placeholder","helperText","onChange","e","target","InputLabelProps","shrink","multiline","rows","rowsMax","Tooltip","title","style","visibility","IconButton","size","disabled","goBackOrHome","then","trim","BorderLinearProgress","withStyles","height","colorPrimary","grey","bar","LinearProgress","useStyles","LinearProgressWithLabel","LinearProgressBarComponent","Box","display","alignItems","mr","Typography","BallotCard","Card","imgHeight","imgHeightMobile","BallotCardMedia","CardMedia","BallotCardComponent","img","raised","CardActionArea","component","alt","gutterBottom","PairContainer","BallotBox","OrText","SkippedText","PairVoteComponent","leftBallot","rightBallot","skippedCount","orClickCount","setOrClickCount","castVote","votePair","LinearProgressBar","alert","skipPair","PairVoteContainer","setPairIndex","setPair","reverseOrder","setReverseOrder","voteQueue","queue","nextIndex","floor","nextPair","randomNextPair","warn","replace","selectProfileRoute","ProgressContainer","EnhancedTableHead","headCells","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","align","numeric","disablePadding","sortDirection","sortable","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","paddingLeft","spacing","paddingRight","highlight","lighten","light","flex","flexDirection","input","EnhancedTableToolbar","rankRange","onRankRangeChange","onExportRows","onClearRows","editButtonText","doneButtonText","isSelectMode","isEditMode","setIsEditMode","createChangeHandler","start","end","isNaN","Number","Toolbar","clsx","ImportExport","Delete","defaultValue","Done","Edit","container","minHeight","marginBottom","table","minWidth","border","clip","top","RowImage","ResultTableCellComponent","labelId","rank","outRow","isName","isImg","scope","src","ResultTableRowComponent","isItemSelected","handleClick","hover","role","aria-checked","tabIndex","selected","descendingComparator","b","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","rowsPerPageOptions","ResultTableComponent","defaultOrderBy","defaultOrder","defaultRowCount","maxScore","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","rankStart","setRankStart","rankEnd","setRankEnd","selectedIndex","indexOf","newSelected","isSelected","calculateRank","EPSILON","toFixed","delimiter","rowWidth","csvContent","join","hiddenElement","document","createElement","href","encodeURI","download","click","exportCsv","header","column","filteredRows","unshift","filterSelectedRows","TableContainer","Table","stickyHeader","aria-labelledby","newSelecteds","n","TableBody","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","ViewListComponent","listRows","resultsTitleSuffix","resultsTitle","voteOnPairs","ResultTable","homeRoute","routeComponent","path","routeList","PairVote","ViewList","goBack","App","ThemeProvider","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppContext","currentProfileKey","AppProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e50afb8.chunk.js","sourcesContent":["let valueCache = {};\n\n/**\n * Creates hook like functions for manipulating local storage.\n *\n * @param {string} key\n * @param {object} initialValue\n * @return {[value: any, setValue: (value) => {}]}\n */\nexport const useLocalStorage = (key, initialValue) => {\n  const getValue = () => {\n    try {\n      const rawItem = window.localStorage.getItem(key);\n      return rawItem ? JSON.parse(rawItem) : initialValue;\n    } catch (error) {\n      console.error('Failed to retrieve value! Using initial value', error);\n      return initialValue;\n    }\n  };\n\n  valueCache[key] = getValue();\n\n  const setValue = (value) => {\n    try {\n      const valueString = JSON.stringify(value);\n      window.localStorage.setItem(key, valueString);\n      valueCache[key] = getValue();\n    } catch (error) {\n      console.error('Failed to store value!', error);\n    }\n  };\n\n  return [valueCache[key], setValue];\n};\n","export const PROFILE_ADD = 'PROFILE/ADD';\nexport const PROFILE_SET_CURRENT = 'PROFILE/SET_CURRENT';\nexport const PROFILE_RESTORE_STATE = 'PROFILE/RESTORE_STATE';\nexport const PAIR_VOTE = 'PROFILE/PAIR/WINNER'\nexport const PAIR_SKIP = 'PROFILE/PAIR/SKIP'\nexport const LIST_EDIT = 'PROFILE/LIST/EDIT';\nexport const LIST_RESET_ROWS = 'PROFILE/LIST/RESET_ROWS';\n\n/**\n * @typedef {import('./ProfileStructure').ComparisonRow} ComparisonRow\n * @typedef {import('./ProfileStructure').ComparisonCandidate} ComparisonCandidate\n * @typedef {import('./ProfileStructure').ProfileItem} ProfileItem\n * @typedef {import('./ProfileStructure').VotingPair} VotingPair\n * @typedef {import('./reducers').ProfileState} ProfileState\n * @typedef {import('./reducers').Action} Action\n */\n\n/////////////////////////////////////////////////////////////////////////\n// Actions\n/////////////////////////////////////////////////////////////////////////\n\n/**\n *\n * @param {ProfileState} profileState\n * @return {Action}\n */\nexport const restoreProfileState = (profileState) => ({\n  type: PROFILE_RESTORE_STATE,\n  data: {\n    profileState\n  }\n});\n\n/**\n *\n * @param {string} newProfileId\n * @param {string} name\n * @param {Object.<string, ComparisonCandidate>} nameMap\n * @param {Object.<string, VotingPair>} pairList\n * @return {Action}\n */\nexport const addProfile = (newProfileId, name, nameMap, pairList) => ({\n  type: PROFILE_ADD,\n  data: {\n    newProfileId, name, nameMap, pairList\n  }\n});\n\n/**\n *\n * @param {string} id\n * @return {Action}\n */\nexport const setCurrentProfile = (id) => ({\n  type: PROFILE_SET_CURRENT,\n  data: {\n    id\n  }\n});\n\n/**\n *\n * @param {string} pairIndex\n * @param {string} winnerListId\n * @return {Action}\n */\nexport const votePair = (pairIndex, winnerListId) => ({\n  type: PAIR_VOTE,\n  data: {\n    pairIndex,\n    winnerListId\n  }\n});\n\n/**\n *\n * @param {string} pairIndex\n * @return {Action}\n */\nexport const skipPair = (pairIndex) => ({\n  type: PAIR_SKIP,\n  data: {\n    pairIndex\n  }\n});\n\n/**\n *\n * @param {[string]} listIds\n * @param {Object.<string, ComparisonCandidate>} nameMap\n * @param {[VotingPair]} pairList\n * @return {Action}\n */\nexport const resetListRows = (nameMap, pairList) => ({\n  type: LIST_RESET_ROWS,\n  data: {\n    nameMap, pairList\n  }\n});\n","import {\n  LIST_RESET_ROWS,\n  PAIR_SKIP,\n  PAIR_VOTE,\n  PROFILE_ADD,\n  PROFILE_RESTORE_STATE,\n  PROFILE_SET_CURRENT,\n} from './actions';\n\n/**\n * @typedef {import('./ProfileStructure').ComparisonRow} ComparisonRow\n * @typedef {import('./ProfileStructure').ComparisonCandidate} ComparisonCandidate\n * @typedef {import('./ProfileStructure').ProfileItem} ProfileItem\n * @typedef {import('./ProfileStructure').VotingPair} VotingPair\n */\n\n/**\n * React reducer action.\n * @typedef {{\n *  type: string, data: any\n * }} Action\n */\n\n/**\n *\n * @typedef {{\n * currentProfile: string | null,\n * updatedAtTime: number | null,\n * profiles: Object.<string, ProfileItem>\n * }} ProfileState\n */\n\n/**\n *\n * @param {ProfileState} state\n * @param {Action} action\n * @return {ProfileState}\n */\nexport function reducer(state, action) {\n  switch (action.type) {\n    case PROFILE_RESTORE_STATE:\n      return {\n        ...state,\n        ...action.data.profileState\n      };\n    default:\n      return {\n        ...rootReducer(state, action),\n        updatedAtTime: new Date().getTime()\n      };\n  }\n}\n/**\n *\n * @param {ProfileState} state\n * @param {Action} action\n * @return {ProfileState}\n */\nfunction rootReducer(state, action) {\n  const { type, data } = action;\n  switch (type) {\n    case PROFILE_SET_CURRENT:\n      const currentProfileId = data.id;\n      if (!state.profiles[currentProfileId]) {\n        throw new Error(`Invalid profile supplied: '${currentProfileId}'`);\n      }\n      return {\n        ...state,\n        currentProfile: currentProfileId\n      };\n    case PROFILE_ADD:\n      return {\n        ...state,\n        currentProfile: data.newProfileId,\n        profiles: profileReducer(state.profiles, action, data.newProfileId)\n      };\n    case LIST_RESET_ROWS:\n    case PAIR_SKIP:\n    case PAIR_VOTE:\n      if (!state.profiles[state.currentProfile]) {\n        throw new Error(`No profile selected!`);\n      }\n      return {\n        ...state,\n        profiles: profileReducer(state.profiles, action, state.currentProfile)\n      };\n    default:\n      return state;\n  }\n}\n\n/**\n *\n * @param {Object.<string, ProfileItem>} state\n * @param {Action} action\n * @param {string} currentProfile\n */\nfunction profileReducer(state, action, currentProfile) {\n  const { type, data } = action;\n  switch (type) {\n    case PROFILE_ADD:\n      const newProfile = {};\n      newProfile[currentProfile] = {\n        name: data.name,\n        list: data.nameMap,\n        dateTime: new Date().getTime(),\n        pairs: data.pairList,\n        totalComparisons: data.pairList.length\n      };\n\n      return {\n        ...state,\n        ...newProfile\n      };\n    case PAIR_SKIP:\n      const skipProfile = {};\n      skipProfile[currentProfile] = {\n        ...state[currentProfile],\n        dateTime: new Date().getTime(),\n        pairs: pairReducer(state[currentProfile].pairs, action, data.pairIndex)\n      };\n      return {\n        ...state,\n        ...skipProfile\n      };\n    case PAIR_VOTE:\n      const voteProfile = {};\n      voteProfile[currentProfile] = {\n        ...state[currentProfile],\n        dateTime: new Date().getTime(),\n        list: listReducer(state[currentProfile].list, action, data.winnerListId),\n        pairs: pairReducer(state[currentProfile].pairs, action, data.pairIndex)\n      };\n      return {\n        ...state,\n        ...voteProfile\n      };\n    case LIST_RESET_ROWS:\n      const resetRowsProfile = {};\n      resetRowsProfile[currentProfile] = {\n        ...state[currentProfile],\n        dateTime: new Date().getTime(),\n        list: listReducer(state[currentProfile].list, action),\n        pairs: pairReducer(state[currentProfile].pairs, action)\n      };\n      return {\n        ...state,\n        ...resetRowsProfile\n      };\n    default:\n      return state;\n  }\n}\n\n/**\n *\n * @param {Object.<string, ComparisonCandidate>} state\n * @param {Action} action\n * @param {string|null} listId\n */\nfunction listReducer(state, action, listId = null) {\n  const { type, data } = action;\n  switch (type) {\n    case LIST_RESET_ROWS:\n      return {\n        ...state,\n        ...data.nameMap\n      }\n    case PAIR_VOTE:\n      const voteListRow = {}\n      voteListRow[listId] = {\n        ...state[listId],\n      };\n      voteListRow[listId].score++;\n      return {\n        ...state,\n        ...voteListRow\n      };\n    default:\n      return state;\n  }\n}\n\n/**\n *\n * @param {[VotingPair]} state\n * @param {Action} action\n * @param {string|null} pairIndex\n */\nfunction pairReducer(state, action, pairIndex = null) {\n  const { type, data } = action;\n  switch (type) {\n    case LIST_RESET_ROWS:\n      const resetPairs = [\n        // Merge new data first as we'll be filtering array, first entry wins.\n        ...data.pairList,\n        ...state,\n      ];\n      return resetPairs.filter((pair, index) => (\n        resetPairs.findIndex(\n          pairCheck => pairCheck.id === pair.id || pairCheck.rid === pair.id\n        ) === index\n      ));\n    case PAIR_VOTE:\n      const pairNext = [\n        ...state,\n      ];\n      pairNext.splice(pairIndex, 1);\n      return pairNext;\n    case PAIR_SKIP:\n      const pairSkip = [\n        ...state,\n      ];\n      pairSkip[pairIndex].skipped++;\n      return pairSkip;\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { createSelector } from 'reselect'\nimport { useLocalStorage } from 'lib/localStorage';\nimport { restoreProfileState } from './actions';\nimport { reducer } from './reducers';\n\n/**\n * @typedef {import('./ProfileStructure').ComparisonRow} ComparisonRow\n * @typedef {import('./ProfileStructure').ComparisonCandidate} ComparisonCandidate\n * @typedef {import('./ProfileStructure').ProfileItem} ProfileItem\n * @typedef {import('./ProfileStructure').VotingPair} VotingPair\n * @typedef {import('./reducers').ProfileState} ProfileState\n * @typedef {import('./reducers').Action} Action\n */\n\n/////////////////////////////////////////////////////////////////////////\n// Selectors\n/////////////////////////////////////////////////////////////////////////\n\n/**\n * @param {ProfileState} state\n * @returns {[ProfileItem]}\n */\nexport const getProfiles = state => Object.entries(state.profiles)\n  .map(([id, profile]) => ({ ...profile, id }));\n\n/**\n * @param {ProfileState} state\n * @returns {ProfileItem|null} Null if no profile selected.\n */\nexport const getCurrentProfile = state => state.currentProfile ? ({\n  ...state.profiles[state.currentProfile],\n  id: state.currentProfile\n}) : null;\n\n/**\n * @param {ProfileState} state\n * @return {[VotingPair]} Array of VotingPairs.\n */\nexport const getPairs = createSelector(\n  getCurrentProfile,\n  profile => profile ? profile.pairs : []\n);\n\n/**\n * @param {ProfileState} state\n * @return {[ComparisonCandidate]}\n */\nexport const getListValues = createSelector(\n  getCurrentProfile,\n  profile => profile ? Object.values(profile.list) : []\n);\n\n/**\n * @param {ProfileState} state\n * @return {number} The max score for the current list.\n */\nexport const getMaxScore = createSelector(\n  getListValues,\n  listValues => listValues.reduce(\n    (max, item) => max < item.score ? item.score : max,\n    0\n  )\n);\n\n/**\n * @param {ProfileState} state\n * @return {number} The length of comparisons or 1 (to prevent NaN/Infinity).\n */\nexport const getTotalComparisons = createSelector(\n  getCurrentProfile,\n  (profile) => (profile && profile.totalComparisons) || 1\n);\n\n/**\n * @param {ProfileState} state\n * @return {number}\n */\nexport const getProgress = createSelector(\n  getPairs,\n  getTotalComparisons,\n  (pairs, total) => pairs ? total - pairs.length : 0\n);\n\n/**\n *\n * @param {ProfileState} state\n * @return {number}\n */\nexport const getUpdatedAtTime = (state) => state.updatedAtTime;\n\n/**\n* The profile state with keys for each id.\n*\n* @typedef ProfileState\n*/\nconst initialState = {\n  currentProfile: null,\n  updatedAtTime: null,\n  profiles: {}\n};\n\nexport const ProfileContext = React.createContext();\n\n/**\n * Be careful changing this; can use the version number\n * to nail down the storage schema/migrations if necessary.\n * We nest local storage since we expect multiple localhost AND\n * multiple` iamovrhere.github.io` applications.\n */\nconst localStorageKey = 'pairwise-ranking-app:profiles:v0.1.0';\n\n/**\n * @returns {{ state: ProfileState, dispatch: (Action) => {}}}\n */\nexport function ProfileProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const [storageState, setStorageState] = useLocalStorage(localStorageKey, initialState);\n\n  const storedUpdatedAt = getUpdatedAtTime(storageState);\n  const currentUpdatedAt = getUpdatedAtTime(state);\n  const isStoredStale = storedUpdatedAt < currentUpdatedAt;\n\n  React.useEffect(() => {\n    const currentProfile = getCurrentProfile(state);\n    const storedProfile = getCurrentProfile(storageState);\n    if (!currentProfile && storedProfile) {\n      dispatch(restoreProfileState(storageState));\n    }\n  }, [dispatch, state, storageState]);\n\n  React.useEffect(() => {\n    const currentProfile = getCurrentProfile(state);\n    if (!storedUpdatedAt || (currentProfile && isStoredStale)) {\n      setStorageState(state);\n    }\n  }, [state, storedUpdatedAt, isStoredStale, setStorageState]);\n\n  const value = { state, dispatch };\n\n  return (\n    <ProfileContext.Provider value={value}>\n      {props.children}\n    </ProfileContext.Provider>\n  );\n}\n","import {\n  Button,\n  Fab,\n  colors\n} from '@material-ui/core';\nimport styled from 'styled-components';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// https://material-ui.com/customization/default-theme/\n// Nice tool for palette mixing:\n// https://material-ui.com/customization/color/\nexport const AppTheme = createMuiTheme({\n  palette: {\n    primary: {\n      // Slightly darker than `colors.lightGreen`\n      // Better contrast and more on theme.\n      main: '#689f38',\n    },\n    secondary: colors.orange\n  },\n});\n\n// https://material-ui.com/customization/breakpoints/\n// 0px     600px    960px    1280px   1920px\nconst md = 960;\n/**\n * Usage:\n * ${breakPoint.mediumAndSmaller} {\n *    ... // styling\n *  }\n */\nexport const breakPoint = {\n  mediumAndSmaller: `@media (max-width: ${md}px)`\n};\n\nexport const CommonButton = styled(Button)`\n  &.MuiButton-root {\n    width: 10rem;\n    margin: .5rem;\n  }\n`;\n\nexport const PrimaryButton = styled(CommonButton).attrs({\n  variant: \"contained\",\n  color: \"primary\"\n})``;\n\nexport const OptionalButton = styled(CommonButton).attrs({\n  variant: \"contained\",\n})``;\n\n\nexport const CancelButton = styled(CommonButton).attrs({\n  variant: \"outlined\",\n  color: \"secondary\"\n})``;\n\nexport const PrimaryFab = styled(Fab).attrs({\n  color: \"primary\"\n})`\n  &.MuiFab-root {\n    margin: .5rem;\n  }\n`;\n","import styled from 'styled-components';\nimport {\n  Paper,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { breakPoint } from 'components/common/common.style';\n\nconst blockMargin = '1rem';\nexport const ListContainer = styled.div`\n  display: flex;\n  align-content: space-between;\n  flex-direction: column;\n  align-items: center;\n\n  margin: 2rem auto;\n\n  width: 80%;\n  max-width: 100%;\n\n  ${breakPoint.mediumAndSmaller} {\n    width: 100%;\n  }\n`;\n\nexport const useListStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 400,\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n    maxHeight: '60vh',\n    margin: blockMargin,\n    color: theme.palette.primary.dark,\n    borderRadius: '1rem'\n  },\n}));\n\n\nexport const GetStartedMessage = styled(Paper).attrs({\n  elevation: 10\n})`\n  display: flex;\n  align-items: center;\n  min-height: 20vh;\n\n  margin: ${blockMargin};\n  padding: 2rem;\n  border-radius: 1rem;\n`;\n\nexport const ListItemSpaceBetweenText = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ProfileContext,\n  getProfiles,\n} from 'contexts/Profile';\nimport { setCurrentProfile } from 'contexts/Profile/actions';\nimport {\n  GetStartedMessage,\n  ListContainer,\n  ListItemSpaceBetweenText,\n  useListStyles,\n} from './SelectProfile.style';\nimport {\n  editProfileRoute,\n  viewProfileList\n} from 'app/routes';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport {\n  PrimaryFab\n} from 'components/common/common.style';\n\nfunction RowComponent(props) {\n  const { id, name, dateTime, listLength, progress, totalComparisons, onClick } = props;\n\n  return (\n    <ListItem button key={id} onClick={onClick}>\n      <ListItemText\n        primary={<ListItemSpaceBetweenText>\n          <span>{name}</span>\n          <span>{\n            `    ${Math.round(progress / totalComparisons * 100)}%`\n          }</span>\n        </ListItemSpaceBetweenText>}\n        secondary={\n          <ListItemSpaceBetweenText>\n            <span>{\n              `${listLength} rows ` +\n              `(${progress}/${totalComparisons})`\n            }</span>\n            <span>{new Date(dateTime).toLocaleString()}</span>\n          </ListItemSpaceBetweenText>\n        }\n\n      >\n      </ListItemText>\n    </ListItem>\n  );\n}\n\nRowComponent.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  dateTime: PropTypes.number.isRequired,\n  listLength: PropTypes.number.isRequired,\n  progress: PropTypes.number.isRequired,\n  totalComparisons: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nfunction SelectProfileComponent({ history }) {\n  const { state, dispatch } = React.useContext(ProfileContext);\n  const profiles = getProfiles(state);\n  const classes = useListStyles();\n\n  const emptyList = `Create a profile to get started`;\n  return (\n    <>\n      <ListContainer>\n        {\n          profiles.length ?\n            (\n              <List className={classes.root}>\n                {\n                  profiles.map(({ name, id, dateTime, list, pairs, totalComparisons }) => {\n                    const listLength = Object.values(list).length;\n                    const progress = totalComparisons - pairs.length;\n                    return (\n                      <RowComponent\n                        key={id}\n                        id={id}\n                        name={name}\n                        dateTime={dateTime}\n                        progress={progress}\n                        listLength={listLength}\n                        totalComparisons={totalComparisons}\n                        onClick={() => {\n                          dispatch(setCurrentProfile(id));\n                          history.push(viewProfileList);\n                        }}\n                      />\n                    );\n                  })\n                }\n              </List>\n            ) :\n            <GetStartedMessage>\n              {emptyList}\n            </GetStartedMessage>\n        }\n        <PrimaryFab\n          aria-label=\"add\"\n          onClick={() => history.push(editProfileRoute)}\n        >\n          <AddIcon />\n        </PrimaryFab>\n      </ListContainer>\n\n    </>\n  );\n}\n\nexport default SelectProfileComponent;\n","import SelectProfile from './SelectProfileComponent';\n\nexport default SelectProfile;\n","/**\n * Collection of simple lib/util functions.\n * Be wary of making this a dumping ground.\n */\n\n\n/**\n * @param {string} base\n * @return {string} Random key of the form: `${10CharBase}_${getTime()}_${random32Num}`\n */\nexport const generateNewKey = (base) =>\n  `${base.substring(0, 10)}_` +\n  `${new Date().getTime()}_` +\n  `${Math.random().toString(36).substring(2, 4)}`;\n\n/**\n * @return {boolean}\n */\nexport const flipCoin = () => Math.floor(Math.random() * 2) % 2 === 0;\n","\n/**\n * The individual units that are being compared.\n * @typedef {{\n  * name: string,\n  * image: string\n  * }} ComparisonRow\n  */\n\n/**\n* The individual units that are being compared, with meta-data.\n*\n* @typedef {{\n* id: string,\n* name: string,\n* image: string,\n* score: number\n* }} ComparisonCandidate\n*/\n\n/**\n * A voting pair to compare against each other.\n *\n * @typedef {{\n *  id: string,\n *  rid: string,\n *  left: ComparisonCandidate,\n *  right: ComparisonCandidate,\n *  skipped: number,\n * }} VotingPair\n */\n\n/**\n* Profile items as they appear in the profiles map.\n* Where the `pairs` are \"to be voted\". Performance works best\n* as an array for the pairs.\n*\n* @typedef {{\n *   id: string,\n *   name: string,\n *   list: Object.<string, ComparisonCandidate>,\n *   dateTime: number,\n *   pairs: [VotingPair],\n *   totalComparisons: number\n * }} ProfileItem\n */\n\n/**\n * This gives every combination between `firstEntry` and `list`.\n * It does not account for duplicates, so list may need to be filtered.\n *\n * @param {[string, ComparisonCandidate]} firstEntry\n * @param {Object.<string, ComparisonCandidate>} list\n * @return {[VotingPair]}\n */\nconst createPairs = (firstEntry, list) => {\n  const [firstKey, firstItem] = firstEntry;\n  return list.map(([secondKey, secondItem]) => ({\n    id: `${firstKey}${secondKey}`,\n    rid: `${secondKey}${firstKey}`,\n    left: firstItem,\n    right: secondItem,\n    skipped: 0\n  }));\n};\n\n/**\n * This gives every combination between all items in `list`\n * but not against themselves & disregarding order.\n * The result is  n!/r!(n-r)!.\n *\n * @param {Object.<string, ComparisonCandidate>} list\n * @return {[VotingPair]}\n */\nexport const createPairList = (list) => {\n  const listEntries = Object.entries(list);\n  return createPairListRecursive(listEntries);\n}\n\n/**\n * This gives every combination between all items in `list`\n * but not against themselves & disregarding order.\n * The result is  n!/r!(n-r)!.\n *\n * @param {[ComparisonCandidate]} listEntries\n * @return {[VotingPair]}\n */\nconst createPairListRecursive = (listEntries) => {\n  if (listEntries.length < 2) {\n    return [];\n  }\n  // By reducing the remainder by one, we ensure no\n  // mirror duplicates.\n  const firstItem = listEntries[0];\n  const remainder = listEntries.slice(1);\n\n  const pairs = createPairs(firstItem, remainder);\n  return pairs.concat(createPairListRecursive(remainder));\n};\n\n/**\n * This gives every combination between all items in `list`\n * but not against themselves & disregarding order.\n * The result is  n!/r!(n-r)!.\n *\n * @param {Object.<string, ComparisonCandidate>} resetList\n * @param {Object.<string, ComparisonCandidate>} list\n * @return {[VotingPair]}\n */\nexport const resetPairList = (resetList, list) => {\n  const key = 0;\n  const resetEntries = Object.entries(resetList);\n  let listEntries = Object.entries(list);\n\n  return resetEntries.reduce((result, firstItem) => {\n    // We remove each matching record first, to prevent a double list.\n    listEntries = listEntries.filter((item) => firstItem[key] !== item[key]);\n    return result.concat(createPairs(firstItem, listEntries));\n  }, []);\n}\n\n/**\n * Removes all duplicates based on the name. Adds score + id.\n *\n * @param {[ComparisonRow]} list\n * @return {Object.<string, ComparisonCandidate>}\n */\nexport const createNameMap = list => list.reduce((nameMap, item) => {\n  const id = '_' + item.name;\n  nameMap[id] = {\n    ...item,\n    id,\n    score: 0,\n  };\n  return nameMap;\n}, {});\n","import { getCurrentProfile } from 'contexts/Profile';\nimport { addProfile, resetListRows } from 'contexts/Profile/actions';\nimport { generateNewKey } from 'lib';\nimport { createNameMap, createPairList, resetPairList } from './ProfileStructure';\n\n/**\n * @typedef {import('./ProfileStructure').ComparisonRow} ComparisonRow\n * @typedef {import('./ProfileStructure').ComparisonCandidate} ComparisonCandidate\n * @typedef {import('./ProfileStructure').ProfileItem} ProfileItem\n * @typedef {import('./ProfileStructure').VotingPair} VotingPair\n */\n\n// 4 spaces, because tabs are difficult in browsers.\n// TODO change to multiple space + http://\nconst SEPARATOR = '    ';\n\n/**\n * Does the process of creating the new profile + pair list.\n * Then dispatches.\n *\n * @param {{ state: any, dispatch: Function}} dispatch\n * @param {string} name\n * @param {string} listText text with a separator (current 4 tabs)\n */\nexport const asyncCreateProfile = async (context, name, listText) => {\n  const { state, dispatch } = context;\n  const list = listText.split('\\n').map((row) => {\n    const [name, image] = row.split(SEPARATOR);\n    return { name, image };\n  }).filter(({ name, image }) => name || image);\n\n  let newProfileId = generateNewKey(name);\n  let safetyCheck = 100;\n\n  // Guarantee uniqueness.\n  while (state.profiles[newProfileId]) {\n    if (safetyCheck--) {\n      newProfileId = generateNewKey(name);\n    } else {\n      console.error('Failed uniqueness 100 times! Play the lottery?')\n      break;\n    }\n  }\n\n  const nameMap = createNameMap(list);\n  const pairList = createPairList(nameMap);\n  console.log(nameMap, pairList);\n  dispatch(addProfile(newProfileId, name, nameMap, pairList));\n};\n\n/**\n * Does the process of creating the new profile + pair list.\n * Then dispatches.\n *\n * @param {{ state: any, dispatch: Function}} dispatch\n * @param {[string]} listIds\n */\nexport const asyncResetListRows = async (context, listIds) => {\n  const { state, dispatch } = context;\n  const profile = getCurrentProfile(state);\n  const nameMap = listIds.reduce((map, id) => {\n    const resetItem = { ...profile.list[id] };\n    resetItem.score = 0;\n    map[id] = resetItem;\n    return map;\n  }, {});\n  const pairList = resetPairList(nameMap, profile.list);\n  console.log(nameMap, pairList);\n  dispatch(resetListRows(nameMap, pairList));\n};\n","import {\n  Paper,\n  TextField\n} from '@material-ui/core';\nimport styled from 'styled-components';\n\n// TODO RESPONSIVE\nexport const ProfileContainer = styled.div`\n  margin: auto;\n`;\n\nexport const ProfileCard = styled(Paper).attrs({\n  elevation: 10\n})`\n  padding: 1rem;\n  border-radius: 1rem;\n`;\n\nexport const ProfileName = styled(TextField)`\n  &.MuiFormControl-root {\n    width: 95%;\n    margin: 1rem;\n  }\n`;\n\nexport const ListTextArea = styled(TextField)`\n  &.MuiFormControl-root {\n    width: 95%;\n    margin: 1rem;\n  }\n`;\n","import React from 'react';\nimport {\n  IconButton,\n  Tooltip,\n} from '@material-ui/core';\nimport {\n  EmojiObjectsOutlined as LightBulbOutlinedIcon,\n} from '@material-ui/icons';\nimport { ProfileContext } from 'contexts/Profile';\nimport { asyncCreateProfile } from 'contexts/Profile/middleware';\nimport { viewProfileList, goBackOrHome } from 'app/routes';\nimport {\n  PrimaryButton,\n  CancelButton\n} from 'components/common/common.style';\nimport {\n  ListTextArea,\n  ProfileContainer,\n  ProfileCard,\n  ProfileName,\n} from './EditProfile.style';\n\nconst SAMPLE_TITLE = 'Apples & Oranges';\nconst SAMPLE_DATA = `Honey Crisp    https://upload.wikimedia.org/wikipedia/commons/thumb/f/f4/Honeycrisp.jpg/600px-Honeycrisp.jpg\nTangerine     https://upload.wikimedia.org/wikipedia/commons/2/2a/TangerineFruit.jpg\nMandarin Orange    https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Mandarin_Oranges_%28Citrus_Reticulata%29.jpg/800px-Mandarin_Oranges_%28Citrus_Reticulata%29.jpg\nBlood Orange     https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/BloodOrange.jpg/800px-BloodOrange.jpg\nAmbrosia     https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Ambrosia_apples_2017_A3.jpg/600px-Ambrosia_apples_2017_A3.jpg\nGolden Delicious    https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Golden_delicious_apple.jpg/800px-Golden_delicious_apple.jpg\n\n`;\n\nfunction EditProfileComponent({ history }) {\n  const context = React.useContext(ProfileContext);\n  const [titleText, setTitleText] = React.useState('');\n  const [listText, setListText] = React.useState('');\n\n  // TODO TRANSLATIONS\n  const listLabel = 'List of comparable items';\n  const listPlaceholder = '\"Item 1\"    [Optional: <4-spaces> Image-URL]\\n' +\n    '\"Item 2\"    [Optional: <4-spaces> Image-URL]\\n' +\n    '\"Item 3\"    [Optional: <4-spaces> Image-URL]\\n' +\n    '\\n\\n' +\n    'Recommended for lists under 500 (124,750 comparisons)\\n' +\n    '...';\n  const listMin = 10;\n  const listMax = 20;\n\n  const profileNameLabel = \"List Name\";\n  const profileNamePlaceholder = \"What's the name of this Profile?\";\n\n\n  return (\n    <ProfileContainer>\n      <ProfileCard>\n        <ProfileName\n          aria-label={profileNameLabel}\n          label={profileNameLabel}\n          placeholder={profileNamePlaceholder}\n          helperText=\"\"\n          variant=\"outlined\"\n          onChange={(e) => {\n            setTitleText(e.target.value);\n          }}\n          value={titleText}\n          InputLabelProps={{ shrink: !!titleText }}\n        />\n        <ListTextArea\n          aria-label={listLabel}\n          label={listLabel}\n          multiline\n          rows={listMin}\n          rowsMax={listMax}\n          variant=\"outlined\"\n          placeholder={listPlaceholder}\n          onChange={(e) => {\n            setListText(e.target.value);\n          }}\n          value={listText}\n          InputLabelProps={{ shrink: !!listText }}\n        />\n        {\n          <Tooltip\n            title=\"Use Sample Content\"\n            style={{ visibility: listText ? 'hidden' : 'visible' }}\n          >\n            <IconButton\n              size=\"small\"\n              aria-label=\"Use Sample Content\"\n              onClick={() => {\n                setTitleText(SAMPLE_TITLE);\n                setListText(SAMPLE_DATA);\n              }}\n              disabled={!!listText}\n            >\n              <LightBulbOutlinedIcon />\n              Sample\n            </IconButton>\n          </Tooltip>\n        }\n      </ProfileCard>\n      <CancelButton\n        onClick={() => goBackOrHome(history)}\n      >\n        Back\n      </CancelButton>\n      <PrimaryButton\n        onClick={() => {\n          // TODO add spinner.\n          asyncCreateProfile(context, titleText, listText)\n            .then(() => history.push(viewProfileList));\n        }}\n        disabled={!listText.trim() || !titleText.trim()}\n      >\n        Save\n      </PrimaryButton>\n    </ProfileContainer>\n  );\n}\n\nexport default EditProfileComponent;\n","import EditProfile from './EditProfileComponent';\n\nexport default EditProfile;\n","/**\n * From: https://material-ui.com/components/progress/\n *\n * And modified.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 15,\n    borderRadius: 10,\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 10,\n  },\n}))(LinearProgress);\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\n/**\n * Displays a chunky linear progress bar with `value/total (progress %)`.\n * @param {{\n  value: number,\n  total: number,\n  * }} props\n */\nfunction LinearProgressWithLabel(props) {\n  const classes = useStyles();\n  const { value, total } = props;\n  const progress = value / total * 100;\n  return (\n    <Box display=\"flex\" alignItems=\"center\" className={classes.root}>\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress\n          variant=\"determinate\"\n          {...props}\n          value={progress}\n          height={40}\n        />\n      </Box>\n      <Box>\n        <Typography variant=\"body2\">\n          {`${value}/${total}`}&nbsp;\n          {`(${Math.round(progress)}%)`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  value: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default LinearProgressWithLabel;\n\n","import LinearProgressBarComponent from './LinearProgressBarComponent';\n\nexport default LinearProgressBarComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardActionArea,\n  CardMedia,\n  Typography,\n} from '@material-ui/core';\nimport styled from 'styled-components';\nimport { breakPoint } from 'components/common/common.style'\n\nconst imgHeight = 250;\nconst imgHeightMobile = 175;\nconst minHeight = imgHeight + 80;\nconst minHeightMobile = imgHeightMobile + 40;\nconst BallotCard = styled(Card)`\n  display: flex;\n  min-height: ${minHeight}px;\n  min-width: ${minHeight}px;\n  border-radius: .5rem;\n\n  h2 {\n    padding: 0 1rem;\n    overflow: ellipsis;\n  }\n\n  ${breakPoint.mediumAndSmaller} {\n    min-height: ${minHeightMobile}px;\n    min-width: ${minHeightMobile}px;\n  }\n`;\n\nconst BallotCardMedia = styled(CardMedia)`\n  height: ${imgHeight}px;\n  ${breakPoint.mediumAndSmaller} {\n    height: ${imgHeightMobile}px;\n  }\n`;\n\n/**\n * Creates a single ballot image card.\n * If there's no image, it'll just render the text is squarish card.\n *\n * @param {{\n  img: null|string,\n  title: string,\n  onClick: Function\n  * }} param0\n */\nfunction BallotCardComponent({ img, title, onClick }) {\n  return (\n    <BallotCard raised={true}>\n      <CardActionArea onClick={onClick}>\n        {\n          img &&\n          <BallotCardMedia\n            component=\"img\"\n            alt={title}\n            image={img}\n            title={title}\n          />\n        }\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n      </CardActionArea>\n    </BallotCard>\n  );\n}\n\nBallotCardComponent.propTypes = {\n  img: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default BallotCardComponent;\n","import BallotCardComponent from './BallotCardComponent';\n\nexport default BallotCardComponent;\n","import styled from 'styled-components';\nimport { breakPoint } from 'components/common/common.style';\n\n// TODO RESPONSIVE\nexport const PairContainer = styled.div`\n  display: flex;\n  align-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n`;\n\nexport const BallotBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-top: 2rem;\n\n  > * {\n    max-width: 45%;\n    flex-grow: 1;\n  }\n\n  ${breakPoint.mediumAndSmaller} {\n    flex-direction: column;\n    > * {\n      max-width: unset;\n      width: 100%;\n    }\n  }\n`;\n\nexport const OrText = styled.div`\n  margin: 1rem;\n  flex-grow: unset;\n`;\n\nexport const SkippedText = styled.div`\n  margin-top: 1rem;\n  font-size: 1rem;\n  color: rgba(255, 255, 255, 0.7);\n`;\n","import React from 'react';\nimport { goBackOrHome } from 'app/routes';\nimport { ProfileContext } from 'contexts/Profile';\nimport { votePair, skipPair } from 'contexts/Profile/actions';\nimport {\n  OptionalButton,\n  CancelButton\n} from 'components/common/common.style';\nimport LinearProgressBar from 'components/common/LinearProgressBar';\nimport BallotCard from './BallotCard';\nimport {\n  BallotBox,\n  PairContainer,\n  OrText,\n  SkippedText,\n} from './PairVote.style';\n\n/**\n * Silly easter egg.\n */\nconst orClickThreshold = 20;\n\n/**\n *\n * @param {number} skipped\n * @return {string}\n */\nconst skippedPhrase = (skipped) => (skipped === 1) ?\n  `1 time` : `${skipped} times`;\n\nfunction PairVoteComponent({\n  history,\n  pairIndex,\n  leftBallot,\n  rightBallot,\n  skippedCount,\n  progress,\n  totalComparisons\n}) {\n  const { dispatch } = React.useContext(ProfileContext);\n\n  const [orClickCount, setOrClickCount] = React.useState(0);\n\n  const castVote = (pairIndex, id) => {\n    dispatch(votePair(pairIndex, id));\n    setOrClickCount(0);\n    console.log(`Voted for: ${id}`);\n  };\n\n  return (\n    leftBallot && rightBallot ?\n      <PairContainer>\n        <LinearProgressBar value={progress} total={totalComparisons} />\n        <BallotBox>\n          <BallotCard\n            img={leftBallot.image}\n            title={leftBallot.name}\n            onClick={() => castVote(pairIndex, leftBallot.id)}\n          />\n          <OrText onClick={() => {\n            setOrClickCount(orClickCount + 1);\n            if (orClickCount && orClickCount % orClickThreshold === 0) {\n              alert(`You chose \"OR\", very funny!`);\n            }\n          }}>\n            OR\n        </OrText>\n          <BallotCard\n            img={rightBallot.image}\n            title={rightBallot.name}\n            onClick={() => castVote(pairIndex, rightBallot.id)}\n          />\n        </BallotBox>\n        <SkippedText>Skipped: {skippedPhrase(skippedCount)}</SkippedText>\n        <OptionalButton\n          onClick={() => {\n            dispatch(skipPair(pairIndex));\n            console.log(`Skipped: ${rightBallot.id} vs. ${leftBallot.id}`);\n          }}\n        >\n          Skip\n      </OptionalButton>\n        <CancelButton\n          onClick={() => goBackOrHome(history)}\n        >\n          Back\n      </CancelButton>\n      </PairContainer> :\n      null\n  );\n}\n\nexport default PairVoteComponent;\n","import React from 'react';\nimport { selectProfileRoute, goBackOrHome } from 'app/routes';\nimport { flipCoin } from 'lib';\nimport {\n  ProfileContext,\n  getCurrentProfile,\n  getPairs,\n  getProgress,\n  getTotalComparisons,\n} from 'contexts/Profile';\nimport PairVoteComponent from './PairVoteComponent';\n\nconst randomNextPair = (queue) => {\n  const nextIndex = Math.floor(Math.random() * queue.length);\n  const nextPair = queue.length ? queue[nextIndex] : [];\n  return {\n    nextIndex,\n    nextPair\n  }\n};\n\nfunction PairVoteContainer(props) {\n  const { history } = props;\n  const { state } = React.useContext(ProfileContext);\n\n  const [pairIndex, setPairIndex] = React.useState(null);\n  const [pair, setPair] = React.useState(null);\n  const [reverseOrder, setReverseOrder] = React.useState(false);\n\n  const voteQueue = getPairs(state);\n  const progress = getProgress(state);\n  const totalComparisons = getTotalComparisons(state);\n\n  React.useEffect(() => {\n    if (progress >= totalComparisons) {\n      goBackOrHome(history);\n    }\n  }, [history, progress, totalComparisons])\n\n  React.useEffect(() => {\n    const { nextIndex, nextPair } = randomNextPair(voteQueue);\n    setPairIndex(nextIndex);\n    setPair(nextPair);\n    setReverseOrder(flipCoin());\n  }, [voteQueue]);\n\n\n  if (!getCurrentProfile(state)) {\n    console.warn('Whoops! No profile selected!');\n    history.replace(selectProfileRoute);\n    return null;\n  }\n\n  return (\n    pair ?\n      <PairVoteComponent\n        {...props}\n        pairIndex={pairIndex}\n        leftBallot={reverseOrder ? pair.right : pair.left}\n        rightBallot={reverseOrder ? pair.left : pair.right}\n        skippedCount={pair.skipped}\n        progress={progress}\n        totalComparisons={totalComparisons}\n      /> :\n      null\n  );\n}\n\nexport default PairVoteContainer;\n","import PairVoteContainer from './PairVoteContainer';\n\nexport default PairVoteContainer;\n","import styled from 'styled-components';\nimport { breakPoint } from 'components/common/common.style';\n\nexport const ListContainer = styled.div`\n  display: flex;\n  align-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n  width: 80%;\n  max-width: 100%;\n\n  ${breakPoint.mediumAndSmaller} {\n    width: 100%;\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  margin: 1rem 0;\n`;\n","/**\n * Modified from: https://material-ui.com/components/tables/#sorting-amp-selecting\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Checkbox,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n} from '@material-ui/core';\n\n/**\n *\n * @param {{\n    headCells: [TableData]\n    classes: object\n    onSelectAllClick: Function,\n    order: string,\n    orderBy: string,\n    numSelected: number,\n    rowCount: number\n    onRequestSort: Function\n  }} props\n */\nconst EnhancedTableHead = (props) => {\n  const {\n    headCells,\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all items' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {\n              headCell.sortable ?\n                (<TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : 'asc'}\n                  onClick={createSortHandler(headCell.id)}\n                >\n                  {headCell.label}\n                  {orderBy === headCell.id ? (\n                    <span className={classes.visuallyHidden}>\n                      {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                    </span>\n                  ) : null}\n                </TableSortLabel>) :\n                headCell.label\n            }\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nEnhancedTableHead.propTypes = {\n  headCells: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    numeric: PropTypes.bool.isRequired,\n    disablePadding: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    sortable: PropTypes.bool.isRequired,\n  })),\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","/**\n * Modified from: https://material-ui.com/components/tables/#sorting-amp-selecting\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  IconButton,\n  TextField,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport {\n  ImportExport as ImportExportIcon,\n  Delete as DeleteIcon,\n  Done as DoneIcon,\n  Edit as EditIcon,\n} from '@material-ui/icons';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight: {\n    borderRadius: '1rem',\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(1),\n  },\n  title: {\n    flex: '1 1 100%',\n    flexDirection: 'column'\n  },\n  input: {\n    margin: '0 1rem'\n  }\n}));\n\n/**\n * Creates title of the table OR the toolbar when in select mode.\n *\n * @param {{\n  *  numSelected: number,\n  *  title: string,\n  *  rankRange: {start, end},\n  *  onRankRangeChange: Function,\n  *  onExportRows: Function,\n  *  onClearRows: Function,\n  * }} props\n  */\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {\n    title,\n    numSelected,\n    rankRange,\n    onRankRangeChange,\n    onExportRows,\n    onClearRows\n  } = props;\n\n  const editButtonText = \"Edit Ranges\";\n  const doneButtonText = \"Done\";\n\n  const isSelectMode = numSelected > 0;\n  const [isEditMode, setIsEditMode] = React.useState(false);\n\n  /**\n   * Creates a lambda for the onChange event.\n   * Includes safety for preventing letter inputs\n   * (firefox will set the value as blank even with type number).\n   *\n   * @param {{start: boolean, end: boolean}} param0\n   */\n  const createChangeHandler = ({ start, end }) => (event) => {\n    const value = event.target.value\n    if (isNaN(value) || value === \"\") {\n      return;\n    }\n    onRankRangeChange({\n      start: Number(start === true ? value : rankRange.start),\n      end: Number(end === true ? value : rankRange.end),\n    });\n  };\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: isSelectMode,\n      })}\n    >\n      {isSelectMode ? (\n        <>\n          <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n            {numSelected} selected\n          </Typography>\n          <Tooltip title=\"Export rows\">\n            <IconButton aria-label=\"Export rows\" onClick={onExportRows}>\n              <ImportExportIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Clear rows\">\n            <IconButton aria-label=\"Clear rows\" onClick={onClearRows}>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </>\n      ) : (\n          isEditMode ? (\n            <>\n              <div className={classes.title}>\n                <TextField\n                  id=\"start-range\"\n                  className={classes.input}\n                  label=\"Rank Start\"\n                  type=\"number\"\n                  defaultValue={rankRange.start}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={createChangeHandler({ start: true })}\n                />\n                <TextField\n                  id=\"end-range\"\n                  className={classes.input}\n                  label=\"Rank End\"\n                  type=\"number\"\n                  defaultValue={rankRange.end}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={createChangeHandler({ end: true })}\n                />\n              </div>\n              <Tooltip title={doneButtonText}>\n                <IconButton\n                  aria-label={doneButtonText}\n                  onClick={() => setIsEditMode(false)}\n                >\n                  <DoneIcon />\n                </IconButton>\n              </Tooltip>\n            </>\n          ) :\n            (\n              <>\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                  {title}\n                </Typography>\n                <Tooltip title={editButtonText}>\n                  <IconButton\n                    aria-label={editButtonText}\n                    onClick={() => setIsEditMode(true)}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                </Tooltip>\n              </>\n            )\n        )\n      }\n    </Toolbar >\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  rankRange: PropTypes.shape({\n    start: PropTypes.number.isRequired,\n    end: PropTypes.number.isRequired\n  }),\n  onRankRangeChange: PropTypes.func.isRequired,\n  onExportRows: PropTypes.func.isRequired,\n  onClearRows: PropTypes.func.isRequired\n};\n\nexport default EnhancedTableToolbar;\n","import styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    minHeight: 200,\n    maxHeight: 440,\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n    borderRadius: '1rem'\n  },\n  table: {\n    minWidth: 200,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport const RowImage = styled.img`\n  width: 100%;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Checkbox,\n  TableCell,\n  TableRow,\n} from '@material-ui/core';\nimport {\n  RowImage,\n} from './ResultTable.style';\n\n\nconst ResultTableCellComponent = ({\n  headCell,\n  row,\n  labelId,\n  rank\n}) => {\n  const outRow = { ...row, rank };\n  const { id, numeric } = headCell;\n  const isName = id === 'name';\n  const isImg = id === 'image';\n  // We want name to be the field to grow.\n  const width = isName ? null :\n    (isImg ? 100 : 30);\n\n  return (\n    <TableCell\n      align={numeric ? 'right' : 'left'}\n      id={isName ? labelId : null}\n      component={isName ? 'th' : null}\n      scope={isName ? 'row' : null}\n      width={width}\n    >\n      {\n        isImg ?\n          (outRow.image && <RowImage\n            src={outRow.image}\n            alt={outRow.name}\n          />) :\n          outRow[id]\n      }\n    </TableCell>\n  );\n};\n\nResultTableCellComponent.propTypes = {\n  headCell: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    numeric: PropTypes.bool.isRequired,\n    disablePadding: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n  }),\n  row: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n  }),\n  labelId: PropTypes.string.isRequired,\n  rank: PropTypes.string.isRequired,\n};\n\n/**\n * Renders each row of the result table; deciding values and layout.\n *\n * @param {{\n *  headCells: [TableData],\n *  row: string,\n *  labelId: string,\n *  isItemSelected: boolean,\n *  handleClick: Function,\n *  rank: string,\n * }} props\n */\nconst ResultTableRowComponent = ({\n  headCells,\n  row,\n  labelId,\n  isItemSelected,\n  handleClick,\n  rank,\n}) => {\n  return (\n    <TableRow\n      hover\n      onClick={(event) => handleClick(event, row.id)}\n      role=\"checkbox\"\n      aria-checked={isItemSelected}\n      tabIndex={-1}\n      key={row.id}\n      selected={isItemSelected}\n    >\n      <TableCell padding=\"checkbox\">\n        <Checkbox\n          checked={isItemSelected}\n          inputProps={{ 'aria-labelledby': labelId }}\n        />\n      </TableCell>\n      {headCells.map((headCell) => (\n        <ResultTableCellComponent\n          key={`${headCell.id}-${row.id}`}\n          headCell={headCell}\n          row={row}\n          labelId={labelId}\n          rank={rank}\n        />\n      ))}\n    </TableRow>\n  );\n};\n\nResultTableRowComponent.propTypes = {\n  headCells: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    numeric: PropTypes.bool.isRequired,\n    disablePadding: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n  })),\n  row: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n  }),\n  labelId: PropTypes.string.isRequired,\n  isItemSelected: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  rank: PropTypes.string.isRequired,\n};\n\nexport default ResultTableRowComponent;\n","/**\n * Modified from: https://material-ui.com/components/tables/#sorting-amp-selecting\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport { exportCsv } from 'lib/export';\nimport EnhancedTableHead from './EnhancedTableHeadComponent';\nimport EnhancedTableToolbar from './EnhancedTableToolbarComponent';\nimport ResultTableRow from './ResultTableRowComponent';\nimport {\n  useStyles,\n} from './ResultTable.style';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n/**\n * Expected structure of the table data.\n * @typedef {{\n  * id: string,\n  * rank: number,\n  * name: string,\n  * image: string,\n  * score: number }} TableData\n  */\n\n/**\n * Correlates to `createRowData()`.\n * Ranks is calculated later.\n */\nconst headCells = [\n  { id: 'score', numeric: true, disablePadding: true, label: 'Score', sortable: true },\n  { id: 'image', numeric: false, disablePadding: false, label: 'Image', sortable: false },\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name', sortable: true },\n  { id: 'rank', numeric: true, disablePadding: false, label: 'Rank', sortable: false },\n];\n\nconst rowsPerPageOptions = [10, 25, 100, 1000];\n\n/**\n * Creates the enhanced table with sortable headers, defined order,\n * and selectable rows.\n *\n * @param {{\n *  title: string,\n *  rows: [{id: string, name: string, image: string, score: number}]\n *  headCells: [TableData],\n *  defaultOrder: string,\n *  defaultOrderBy: string,\n *  defaultRowCount: number,\n *  maxScore: number,\n *  onClearRows: Function.\n * }} props\n */\nconst EnhancedTable = (props) => {\n  const {\n    title,\n    rows,\n    defaultOrderBy,\n    defaultOrder,\n    defaultRowCount,\n    maxScore,\n    onClearRows\n  } = props;\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(defaultOrder);\n  const [orderBy, setOrderBy] = React.useState(defaultOrderBy);\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(defaultRowCount);\n  const [rankStart, setRankStart] = React.useState(1);\n  const [rankEnd, setRankEnd] = React.useState(10);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (id) => selected.indexOf(id) !== -1;\n\n  /**\n   * @param {number} score\n   * @return {string} The formatted rank.\n   */\n  const calculateRank = (score) => {\n    const rankOffset = rankStart;\n    const rankValueRange = rankEnd - rankStart;\n    const scorePercent = score / maxScore || 0;\n    const rank = rankValueRange * scorePercent + rankOffset;\n    const fixedDecimal = 2;\n    const rankRounded = Math.round((rank + Number.EPSILON) * 100) / 100;\n    return rankRounded.toFixed(fixedDecimal);\n  };\n\n  /**\n   * @return {[[string]]} An array of array of strings.\n   * In the order of `headerCells`, filtered with `isSelected`.\n   */\n  const filterSelectedRows = () => {\n    const header = headCells.map((column) => column.label);\n    let filteredRows = stableSort(rows, getComparator(order, orderBy))\n      .filter((value) => isSelected(value.id))\n      .map((row) => headCells.map((column) => (\n        column.id === 'rank' ? calculateRank(row.score) : row[column.id]\n      )));\n    filteredRows.unshift(header);\n    return filteredRows;\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          title={title}\n          numSelected={selected.length}\n          rankRange={{ start: rankStart, end: rankEnd }}\n          onRankRangeChange={({ start, end }) => {\n            setRankStart(start);\n            setRankEnd(end);\n          }}\n          onExportRows={() => {\n            const filtered = filterSelectedRows();\n            exportCsv(filtered, '\\t', title);\n          }}\n          onClearRows={() => {\n            onClearRows(selected);\n          }}\n        />\n        <TableContainer className={classes.container}>\n          <Table\n            stickyHeader\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              headCells={headCells}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <ResultTableRow\n                      key={labelId}\n                      headCells={headCells}\n                      row={row}\n                      labelId={labelId}\n                      isItemSelected={isItemSelected}\n                      handleClick={handleClick}\n                      rank={calculateRank(row.score)}\n                    />\n                  );\n                })}\n\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={rowsPerPageOptions}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n\n    </div >\n  );\n}\n\nEnhancedTable.propTypes = {\n  rows: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n  })),\n  maxScore: PropTypes.number.isRequired,\n  defaultOrder: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  defaultOrderBy: PropTypes.oneOf([\n    'name', 'score'\n  ]).isRequired,\n  defaultRowCount: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  onClearRows: PropTypes.func.isRequired,\n};\n\nexport default EnhancedTable;\n","import ResultTableComponent from './ResultTableComponent.js';\n\nexport default ResultTableComponent;\n","const csvHeader = \"data:text/csv;charset=utf-8,\";\n\n/**\n * Generates the CSV content from rows.\n * Then uses a hidden element to prompt the CSV.\n *\n * @param {[[string]]} rows An array of arrays\n * @param {string} delimiter\n * @param {string} title Function will append .csv\n * @throws Error If there's a mismatched row\n */\nexport const exportCsv = (rows, delimiter, title) => {\n  let rowWidth = 0;\n  const csvContent = csvHeader + rows.map((row, index) => {\n    if (!rowWidth) {\n      rowWidth = row.length;\n    }\n    if (rowWidth !== row.length) {\n      throw new Error(\n        `Mismatched length; expected ${rowWidth} received ${row.length} ` +\n        `at row ${index}`\n      );\n    }\n    return row.join(delimiter);\n  }).join('\\r\\n');\n\n  const hiddenElement = document.createElement('a');\n  hiddenElement.href = encodeURI(csvContent);\n  hiddenElement.target = '_blank';\n\n  //provide the name for the CSV file to be downloaded\n  hiddenElement.download = `${title}.csv`;\n  hiddenElement.click();\n};\n","import React from 'react';\nimport {\n  ProfileContext,\n  getCurrentProfile,\n  getListValues,\n  getMaxScore,\n  getProgress,\n  getTotalComparisons,\n} from 'contexts/Profile';\nimport { asyncResetListRows } from 'contexts/Profile/middleware';\nimport {\n  selectProfileRoute,\n  voteOnPairs\n} from 'app/routes';\nimport {\n  PrimaryButton,\n  CancelButton\n} from 'components/common/common.style';\nimport LinearProgressBar from 'components/common/LinearProgressBar';\nimport {\n  ListContainer,\n  ProgressContainer,\n} from './ViewList.style';\nimport ResultTable from './ResultTable'\n\nconst defaultOrderBy = 'score';\nconst defaultOrder = 'desc';\nconst defaultRowCount = 25;\n\nconst resultsStartTitle = ': Ready to start!';\nconst resultsPartial = '(Partial)';\nconst resultsFinal = '(Results)';\n\nfunction ViewListComponent({ history }) {\n  const { state, dispatch } = React.useContext(ProfileContext);\n  const profile = getCurrentProfile(state);\n  console.log(state);\n\n  if (!profile) {\n    console.warn('Whoops! No profile selected!');\n    history.replace(selectProfileRoute);\n    return null;\n  }\n\n  const progress = getProgress(state);\n  const totalComparisons = getTotalComparisons(state);\n  const maxScore = getMaxScore(state);\n  const listRows = getListValues(state);\n\n  const resultsTitleSuffix = progress ?\n    (progress >= totalComparisons ? resultsFinal : resultsPartial) :\n    resultsStartTitle;\n  const resultsTitle = `${profile.name} ${resultsTitleSuffix}`;\n\n  return (\n    <ListContainer>\n      <ProgressContainer>\n        <LinearProgressBar\n          value={progress}\n          total={totalComparisons}\n        />\n        {\n          (progress < totalComparisons) &&\n          (<PrimaryButton\n            onClick={() => history.push(voteOnPairs)}\n          >\n            {progress ? 'Continue' : 'Start'}\n          </PrimaryButton>)\n        }\n\n      </ProgressContainer>\n\n      <ResultTable\n        rows={listRows}\n        maxScore={maxScore}\n        defaultOrderBy={defaultOrderBy}\n        defaultOrder={defaultOrder}\n        defaultRowCount={defaultRowCount}\n        title={resultsTitle}\n        onClearRows={(listIds) => (\n          // TODO add spinner.\n          asyncResetListRows({ state, dispatch }, listIds)\n        )}\n      />\n      <CancelButton\n        onClick={() => history.replace(selectProfileRoute)}\n      >\n        Switch Profiles\n      </CancelButton>\n    </ListContainer>\n  );\n}\n\nexport default ViewListComponent;\n","import ViewListComponent from './ViewListComponent';\n\nexport default ViewListComponent;\n","import SelectProfile from 'components/SelectProfile';\nimport EditProfile from 'components/EditProfile';\nimport PairVote from 'components/PairVote';\nimport ViewList from 'components/ViewList';\n\n/**\n * See: react-router-dom\n * @typedef {{\n *  goBack: Function, replace: Function\n * }} history\n */\n\nexport const selectProfileRoute = '/';\nexport const editProfileRoute = '/edit-profile';\nexport const viewProfileList = '/list';\nexport const voteOnPairs = '/vote-pair';\nexport const homeRoute = selectProfileRoute;\n\n/**\n * @param {string} path\n * @param {JSX.Element} component\n * @return {{path: string, component: JSX.Element}}\n */\nconst routeComponent = (path, component) => ({ path, component });\n\n/**\n * Array of routes to their components.\n * (Array to guarantee order).\n */\nexport const routeList = [\n  routeComponent(voteOnPairs, PairVote),\n  routeComponent(viewProfileList, ViewList),\n  routeComponent(editProfileRoute, EditProfile),\n  routeComponent(selectProfileRoute, SelectProfile),\n];\n\n/**\n * Way to safely go back, regardless of where you start.\n *\n * @param {history} history\n */\nexport const goBackOrHome = (history) => {\n  if (history.length > 1) {\n    history.goBack();\n  } else {\n    history.replace(homeRoute);\n  }\n};\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { } from 'react-transition-group';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport { routeList } from './routes';\nimport { AppTheme } from 'components/common/common.style';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"app\">\n        <div className=\"app-body\">\n          <ThemeProvider theme={AppTheme}>\n            <Router basename={process.env.PUBLIC_URL}>\n              <Switch>\n                {\n                  routeList.map(({ path, component }) => (\n                    <Route key={path} path={path} component={component} />\n                  ))\n                }\n              </Switch>\n            </Router>\n          </ThemeProvider>\n        </div>\n      </div>\n      <div className=\"build-info\">\n        Release: {process.env.BUILD_INFO}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nexport const AppContext = React.createContext();\n\n// TODO clean up the profile vs. Profile.js\nconst PROFILE_ADD = 'PROFILE/ADD';\nconst PROFILE_SET_CURRENT = 'PROFILE/SET_CURRENT';\n\n/**\n * React reducer action.\n * @typedef {{\n *  type: string, data: any\n * }} Action\n */\n\n/**\n * Dispatch action.\n *\n * @param {string} key\n * @return {Action}\n */\nexport const setCurrentProfile = (key) => ({\n  type: PROFILE_ADD,\n  data: key\n});\n\n/**\n * Dispatch action.\n *\n * @param {string} name\n * @param {string} key\n * @return {Action}\n */\nexport const addProfile = (name, key) => ({\n  type: PROFILE_ADD,\n  data: {\n    name,\n    key\n  }\n});\n\n/**\n * Base store.\n * @typedef {{\n  currentProfile: null,\n  profiles: {{name: string, key: string}}\n  * }} BaseState\n  */\nconst initialState = {\n  currentProfileKey: null,\n  profiles: []\n};\n\n\n/**\n *\n * @param {initialState} state\n * @param {Action} action\n * @return {initialState}\n */\nfunction reducer(state, action) {\n  switch (action.type) {\n    case PROFILE_ADD:\n      return {\n        ...state,\n        profiles: [...state.profiles, action.data]\n      };\n    case PROFILE_SET_CURRENT:\n      return {\n        ...state,\n        currentProfileKey: action.data\n      };\n    default:\n      return state;\n  }\n}\n\n/**\n * @returns {{ state: initialState, dispatch: (Action) => {}}}\n */\nexport function AppProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <AppContext.Provider value={value}>\n      {props.children}\n    </AppContext.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './app/reportWebVitals';\nimport { AppProvider } from './contexts/App';\nimport { ProfileProvider } from './contexts/Profile';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <ProfileProvider>\n        <App />\n      </ProfileProvider>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}