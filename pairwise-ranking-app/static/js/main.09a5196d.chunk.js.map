{"version":3,"sources":["contexts/Profile.js","components/common/common.style.js","components/SelectProfile/SelectProfile.style.js","components/SelectProfile/SelectProfileComponent.js","components/SelectProfile/index.js","components/EditProfile/EditProfile.style.js","components/EditProfile/EditProfileComponent.js","components/EditProfile/index.js","components/common/LinearProgressBar/LinearProgressBarComponent.js","components/common/LinearProgressBar/index.js","components/PairVote/BallotCard/BallotCardComponent.js","components/PairVote/BallotCard/index.js","components/PairVote/PairVote.style.js","components/PairVote/PairVoteComponent.js","components/PairVote/index.js","components/ViewList/ViewList.style.js","components/ViewList/ResultTable/EnhancedTableHeadComponent.js","components/ViewList/ResultTable/EnhancedTableToolbarComponent.js","components/ViewList/ResultTable/ResultTable.style.js","components/ViewList/ResultTable/ResultTableRowComponent.js","components/ViewList/ResultTable/ResultTableComponent.js","components/ViewList/ResultTable/index.js","components/ViewList/ViewListComponent.js","components/ViewList/index.js","app/routes.js","app/App.js","app/reportWebVitals.js","contexts/App.js","index.js"],"names":["ProfileContext","React","createContext","PROFILE_ADD","PROFILE_SET_CURRENT","createPairList","list","reduce","result","item","concat","pairList","pairItem","name","push","left","right","winner","createPairs","generateNewKey","substring","Date","getTime","Math","random","toString","getCurrentProfile","state","profiles","currentProfile","id","getTotalComparisons","createSelector","profile","pairs","length","voted","getProgress","initialState","reducer","action","type","uniqList","data","Object","values","nameMap","score","sort","newProfileId","safetyCheck","console","warn","dateTime","currentProfileId","Error","ProfileProvider","props","useReducer","value","dispatch","Provider","children","AppTheme","createMuiTheme","palette","primary","main","secondary","colors","orange","breakPoint","mediumAndSmaller","CommonButton","styled","Button","PrimaryButton","attrs","variant","color","OptionalButton","CancelButton","PrimaryFab","Fab","blockMargin","ListContainer","div","useListStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","background","paper","position","overflow","maxHeight","margin","dark","borderRadius","GetStartedMessage","Paper","elevation","ListItemSecondaryText","RowComponent","progress","totalComparisons","onClick","ListItem","button","ListItemText","round","toLocaleString","SelectProfileComponent","SelectProfile","history","useContext","keys","map","getProfiles","classes","List","className","setCurrentProfile","viewProfileList","aria-label","editProfileRoute","ProfileContainer","ProfileCard","ProfileName","TextField","ListTextArea","EditProfileComponent","EditProfile","useState","titleText","setTitleText","listText","setListText","listLabel","profileNameLabel","label","placeholder","helperText","onChange","e","target","InputLabelProps","shrink","multiline","rows","rowsMax","Tooltip","title","style","visibility","IconButton","size","disabled","goBackOrHome","split","row","image","filter","log","addProfile","trim","BorderLinearProgress","withStyles","height","colorPrimary","grey","bar","LinearProgress","useStyles","LinearProgressWithLabel","LinearProgressBarComponent","total","Box","display","alignItems","mr","Typography","BallotCard","Card","imgHeight","BallotCardComponent","img","raised","CardActionArea","CardMedia","component","alt","gutterBottom","PairContainer","BallotBox","OrText","SkippedText","generateCard","text","PairVoteComponent","orClickCount","setOrClickCount","skippedTimes","setSkippedTimes","setProgress","ballotValues","setBallotValues","skippedPhrase","castTheVote","LinearProgressBar","alert","ProgressContainer","EnhancedTableHead","headCells","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","align","numeric","disablePadding","sortDirection","sortable","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","paddingLeft","spacing","paddingRight","highlight","lighten","light","flex","flexDirection","input","EnhancedTableToolbar","rankRange","onRankRangeChange","editButtonText","doneButtonText","isSelectMode","isEditMode","setIsEditMode","createChangeHandler","start","end","isNaN","Number","Toolbar","clsx","ImportExport","Delete","defaultValue","Done","Edit","container","minHeight","marginBottom","table","minWidth","border","clip","top","RowImage","ResultTableCellComponent","labelId","rank","outRow","isName","isImg","scope","src","ResultTableRowComponent","isItemSelected","handleClick","maxScore","rankOffset","rankRounded","EPSILON","hover","role","aria-checked","tabIndex","selected","toFixed","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","rowsPerPageOptions","ResultTableComponent","defaultOrderBy","defaultOrder","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","rankStart","setRankStart","rankEnd","setRankEnd","selectedIndex","indexOf","newSelected","slice","TableContainer","Table","stickyHeader","aria-labelledby","newSelecteds","n","TableBody","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","ViewListComponent","resultsTitleSuffix","resultsTitle","voteOnPairs","ResultTable","replace","selectProfileRoute","homeRoute","routeComponent","path","routeList","PairVote","ViewList","goBack","App","ThemeProvider","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppContext","currentProfileKey","AppProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09a5196d.chunk.js","sourcesContent":["import React from 'react';\nimport { createSelector } from 'reselect'\n\nexport const ProfileContext = React.createContext();\n\nexport const PROFILE_ADD = 'PROFILE/ADD';\nexport const PROFILE_SET_CURRENT = 'PROFILE/SET_CURRENT';\n\n/**\n * The individual units that are being compared.\n * @typedef {{\n * name: string,\n * image: string\n * }} ComparisonItem\n */\n\n/**\n* The individual units that are being compared, with meta-data.\n*\n* @typedef {{\n* id: string,\n* name: string,\n* image: string,\n* score: number\n* }} ProcessedComparisonItem\n*/\n\n/**\n * A voting pair to compare against each other.\n * Default for `winner` is `false`, string value is winner.\n *\n * @typedef {{\n *  left: {title: string, image: string},\n *  right: {title: string, image: string},\n *  winner: string|boolean\n * }} VotingPair\n */\n\n/**\n* Profile items as they appear in the profiles map.\n* Where the `pairs` are \"to be voted\" and `voted` past pairs.\n*\n* @typedef {{\n *   id: string,\n *   name: string,\n *   list: [ProcessedComparisonItem],\n *   dateTime: number,\n *   pairs: [VotingPair],\n *   voted: [VotingPair],\n * }} ProfileItem\n */\n\n/**\n * This gives every combination between `item` and `list` (excluding itself).\n * The result is N -1.\n *\n * @param {ComparisonItem} item\n * @param {[ComparisonItem]} list\n * @return {[VotingPair]}\n */\nconst createPairs = (item, list) => list.reduce((pairList, pairItem) => {\n  if (item.name !== pairItem.name) {\n    pairList.push({\n      left: item,\n      right: pairItem,\n      winner: false\n    });\n  }\n  return pairList;\n}, []);\n\n/**\n * This gives every combination between all items in `list`\n * (but not against themselves). The result is (N - 1)^2.\n *\n * @param {[ComparisonItem]} list\n * @return {[VotingPair]}\n */\nconst createPairList = list => list.reduce((result, item) =>\n  result.concat(createPairs(item, list)), []);\n\n/**\n * Removes all duplicates based on the name. Adds score + id.\n *\n * @param {[ComparisonItem]} list\n * @return {[ProcessedComparisonItem]}\n */\nconst uniqueByName = list => Object.values(\n  list.reduce((nameMap, item) => {\n    nameMap[item.name] = {\n      ...item,\n      id: item.name,\n      score: 0,\n    };\n    return nameMap;\n  }, {})\n).sort();\n\n/**\n * @param {string} name\n * @return {string} Pseudo-random key of the form ${10CharName}_${getTime()}_${random32Num}\n */\nconst generateNewKey = (name) =>\n  `${name.substring(0, 10)}_` +\n  `${new Date().getTime()}_` +\n  `${Math.random().toString(36).substring(2, 4)}`;\n\n/**\n *\n * @param {string} name\n * @param {[ComparisonItem]} list\n */\nexport const addProfile = (name, list) => ({\n  type: PROFILE_ADD,\n  data: {\n    name,\n    list\n  }\n});\n\n/**\n *\n * @param {string} name\n * @param {[ComparisonItem]} list\n */\nexport const setCurrentProfile = (id) => ({\n  type: PROFILE_SET_CURRENT,\n  data: {\n    id\n  }\n});\n\n/**\n * @param {ProfileState} state\n * @returns {[ProfileItem]}\n */\nexport const getProfiles = state => Object.keys(state.profiles).map((id) => ({\n  ...state.profiles[id],\n  id\n}));\n\n/**\n * @param {ProfileState} state\n * @returns {ProfileItem}\n */\nexport const getCurrentProfile = state => ({\n  ...state.profiles[state.currentProfile],\n  id: state.currentProfile\n});\n\n/**\n * @return {number} The length of comparisons or 1 (to prevent NaN/Infinity).\n */\nexport const getTotalComparisons = createSelector(\n  getCurrentProfile,\n  profile => (profile.pairs.length + profile.voted.length)\n);\n\n/**\n * @return {number}\n */\nexport const getProgress = createSelector(\n  getCurrentProfile,\n  profile => profile.voted.length\n);\n\n/**\n * The profile state with keys for each id.\n *\n * @typedef {{\n * currentProfile: string | null,\n * profiles: {$id: Profile}\n * }} ProfileState\n */\nconst initialState = {\n  currentProfile: null,\n  profiles: {}\n};\n\n/**\n * React reducer action.\n * @typedef {{\n *  type: string, data: any\n * }} Action\n */\n\n/**\n *\n * @param {initialState} state\n * @param {Action} action\n * @return {initialState}\n */\nfunction reducer(state, action) {\n  switch (action.type) {\n    case PROFILE_ADD:\n      const uniqList = uniqueByName(action.data.list);\n      let newProfileId = generateNewKey(action.data.name);\n      let safetyCheck = 100;\n\n      // Guarantee uniqueness.\n      while (state.profiles[newProfileId]) {\n        if (safetyCheck--) {\n          newProfileId = generateNewKey(action.data.name);\n        } else {\n          console.warn('Failed uniqueness 100 times! Play the lottery?')\n          break;\n        }\n      }\n\n      state.profiles[newProfileId] = {\n        ...action.data,\n        list: uniqList,\n        dateTime: new Date().getTime(),\n        pairs: createPairList(uniqList),\n        voted: []\n      };\n\n      return {\n        ...state,\n        currentProfile: newProfileId,\n        profiles: {\n          ...state.profiles\n        }\n      };\n    case PROFILE_SET_CURRENT:\n      const currentProfileId = action.data.id;\n      if (!state.profiles[currentProfileId]) {\n        throw new Error(`Invalid profile supplied: '${currentProfileId}'`)\n      }\n      return {\n        ...state,\n        currentProfile: currentProfileId\n      };\n    default:\n      return state;\n  }\n}\n\n\n/**\n * @returns {{ state: initialState, dispatch: (Action) => {}}}\n */\nexport function ProfileProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <ProfileContext.Provider value={value}>\n      {props.children}\n    </ProfileContext.Provider>\n  );\n}\n\n","import {\n  Button,\n  Fab,\n  colors\n} from '@material-ui/core';\nimport styled from 'styled-components';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// https://material-ui.com/customization/default-theme/\n// Nice tool for palette mixing:\n// https://material-ui.com/customization/color/\nexport const AppTheme = createMuiTheme({\n  palette: {\n    primary: {\n      // Slightly darker than `colors.lightGreen`\n      // Better contrast and more on theme.\n      main: '#689f38',\n    },\n    secondary: colors.orange\n  },\n});\n\n// https://material-ui.com/customization/breakpoints/\n// 0px     600px    960px    1280px   1920px\nconst md = 960;\n/**\n * Usage:\n * ${breakPoint.mediumAndSmaller} {\n *    ... // styling\n *  }\n */\nexport const breakPoint = {\n  mediumAndSmaller: `@media (max-width: ${md}px)`\n};\n\nexport const CommonButton = styled(Button)`\n  &.MuiButton-root {\n    width: 10rem;\n    margin: .5rem;\n  }\n`;\n\nexport const PrimaryButton = styled(CommonButton).attrs({\n  variant: \"contained\",\n  color: \"primary\"\n})``;\n\nexport const OptionalButton = styled(CommonButton).attrs({\n  variant: \"contained\",\n})``;\n\n\nexport const CancelButton = styled(CommonButton).attrs({\n  variant: \"outlined\",\n  color: \"secondary\"\n})``;\n\nexport const PrimaryFab = styled(Fab).attrs({\n  color: \"primary\"\n})`\n  &.MuiFab-root {\n    margin: .5rem;\n  }\n`;\n","import styled from 'styled-components';\nimport {\n  Paper,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { breakPoint } from 'components/common/common.style';\n\nconst blockMargin = '1rem';\nexport const ListContainer = styled.div`\n  display: flex;\n  align-content: space-between;\n  flex-direction: column;\n  align-items: center;\n\n  margin: 2rem auto;\n\n  width: 80%;\n  max-width: 100%;\n\n  ${breakPoint.mediumAndSmaller} {\n    width: 100%;\n  }\n`;\n\nexport const useListStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 400,\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n    maxHeight: '60vh',\n    margin: blockMargin,\n    color: theme.palette.primary.dark,\n    borderRadius: '1rem'\n  },\n}));\n\n\nexport const GetStartedMessage = styled(Paper).attrs({\n  elevation: 10\n})`\n  display: flex;\n  align-items: center;\n  min-height: 20vh;\n\n  margin: ${blockMargin};\n  padding: 2rem;\n  border-radius: 1rem;\n`;\n\nexport const ListItemSecondaryText = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ProfileContext,\n  getProfiles,\n  setCurrentProfile\n} from 'contexts/Profile';\nimport {\n  GetStartedMessage,\n  ListContainer,\n  ListItemSecondaryText,\n  useListStyles,\n} from './SelectProfile.style';\nimport {\n  editProfileRoute,\n  viewProfileList\n} from 'app/routes';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport {\n  PrimaryFab\n} from 'components/common/common.style';\n\nfunction RowComponent(props) {\n  const { id, name, dateTime, progress, totalComparisons, onClick } = props;\n\n  return (\n    <ListItem button key={id} onClick={onClick}>\n      <ListItemText\n        primary={name}\n        secondary={\n          <ListItemSecondaryText>\n            <span>{\n              `${progress}/${totalComparisons} ` +\n              `(${Math.round(progress / totalComparisons * 100)}%)`\n            }</span>\n            <span>{new Date(dateTime).toLocaleString()}</span>\n          </ListItemSecondaryText>\n        }\n\n      >\n      </ListItemText>\n    </ListItem>\n  );\n}\n\nRowComponent.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  dateTime: PropTypes.number.isRequired,\n  progress: PropTypes.number.isRequired,\n  totalComparisons: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nfunction SelectProfileComponent({ history }) {\n  const { state, dispatch } = React.useContext(ProfileContext);\n  const profiles = getProfiles(state);\n  const classes = useListStyles();\n\n\n  const emptyList = `Create a profile to get started (UI demo only)`;\n  return (\n    <>\n      <ListContainer>\n        {\n          profiles.length ?\n            (\n              <List className={classes.root}>\n                {\n                  profiles.map(({ name, id, dateTime, pairs, voted }) => (\n                    <RowComponent\n                      key={id}\n                      id={id}\n                      name={name}\n                      dateTime={dateTime}\n                      progress={voted.length}\n                      totalComparisons={pairs.length + voted.length || 1}\n                      onClick={() => {\n                        dispatch(setCurrentProfile(id));\n                        history.push(viewProfileList);\n                      }}\n                    />\n                  ))\n                }\n              </List>\n            ) :\n            <GetStartedMessage>\n              {emptyList}\n            </GetStartedMessage>\n        }\n        <PrimaryFab\n          aria-label=\"add\"\n          onClick={() => history.push(editProfileRoute)}\n        >\n          <AddIcon />\n        </PrimaryFab>\n      </ListContainer>\n\n    </>\n  );\n}\n\nexport default SelectProfileComponent;\n","import SelectProfile from './SelectProfileComponent';\n\nexport default SelectProfile;\n","import {\n  Paper,\n  TextField\n} from '@material-ui/core';\nimport styled from 'styled-components';\n\n// TODO RESPONSIVE\nexport const ProfileContainer = styled.div`\n  margin: auto;\n`;\n\nexport const ProfileCard = styled(Paper).attrs({\n  elevation: 10\n})`\n  padding: 1rem;\n  border-radius: 1rem;\n`;\n\nexport const ProfileName = styled(TextField)`\n  &.MuiFormControl-root {\n    width: 95%;\n    margin: 1rem;\n  }\n`;\n\nexport const ListTextArea = styled(TextField)`\n  &.MuiFormControl-root {\n    width: 95%;\n    margin: 1rem;\n  }\n`;\n","import React from 'react';\nimport {\n  IconButton,\n  Tooltip,\n} from '@material-ui/core';\nimport {\n  EmojiObjectsOutlined as LightBulbOutlinedIcon,\n} from '@material-ui/icons';\nimport {\n  ProfileContext,\n  addProfile\n} from 'contexts/Profile';\nimport { viewProfileList, goBackOrHome } from 'app/routes';\nimport {\n  PrimaryButton,\n  CancelButton\n} from 'components/common/common.style';\nimport {\n  ListTextArea,\n  ProfileContainer,\n  ProfileCard,\n  ProfileName,\n} from './EditProfile.style';\n\n\nconst SAMPLE_TITLE = 'Apples & Oranges';\nconst SAMPLE_DATA = `Honey Crisp    https://upload.wikimedia.org/wikipedia/commons/thumb/f/f4/Honeycrisp.jpg/600px-Honeycrisp.jpg\nTangerine     https://upload.wikimedia.org/wikipedia/commons/2/2a/TangerineFruit.jpg\nMandarin Orange    https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Mandarin_Oranges_%28Citrus_Reticulata%29.jpg/800px-Mandarin_Oranges_%28Citrus_Reticulata%29.jpg\nBlood Orange     https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/BloodOrange.jpg/800px-BloodOrange.jpg\nAmbrosia     https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Ambrosia_apples_2017_A3.jpg/600px-Ambrosia_apples_2017_A3.jpg\nGolden Delicious    https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Golden_delicious_apple.jpg/800px-Golden_delicious_apple.jpg\n\n`;\n// 4 spaces, because tabs are difficult in browsers.\nconst SEPARATOR = '    ';\n\nfunction EditProfileComponent({ history }) {\n  // TODO provide means to edit a list.\n  const { dispatch } = React.useContext(ProfileContext);\n  const [titleText, setTitleText] = React.useState('');\n  const [listText, setListText] = React.useState('');\n\n  // TODO TRANSLATIONS\n  const listLabel = 'List of comparable items';\n  const listPlaceholder = '\"Item 1\"    [Optional: <4-spaces> Image-URL]\\n' +\n    '\"Item 2\"    [Optional: <4-spaces> Image-URL]\\n' +\n    '\"Item 3\"    [Optional: <4-spaces> Image-URL]\\n' +\n    '\\n\\n' +\n    'Recommended for lists under 500 (249,001 comparisons)\\n' +\n    '...';\n  const listMin = 10;\n  const listMax = 20;\n\n  const profileNameLabel = \"List Name\";\n  const profileNamePlaceholder = \"What's the name of this Profile?\";\n\n\n  return (\n    <ProfileContainer>\n      <ProfileCard>\n        <ProfileName\n          aria-label={profileNameLabel}\n          label={profileNameLabel}\n          placeholder={profileNamePlaceholder}\n          helperText=\"\"\n          variant=\"outlined\"\n          onChange={(e) => {\n            setTitleText(e.target.value);\n          }}\n          value={titleText}\n          InputLabelProps={{ shrink: !!titleText }}\n        />\n        <ListTextArea\n          aria-label={listLabel}\n          label={listLabel}\n          multiline\n          rows={listMin}\n          rowsMax={listMax}\n          variant=\"outlined\"\n          placeholder={listPlaceholder}\n          onChange={(e) => {\n            setListText(e.target.value);\n          }}\n          value={listText}\n          InputLabelProps={{ shrink: !!listText }}\n        />\n        {\n          <Tooltip\n            title=\"Use Sample Content\"\n            style={{ visibility: listText ? 'hidden' : 'visible' }}\n          >\n            <IconButton\n              size=\"small\"\n              aria-label=\"Use Sample Content\"\n              onClick={() => {\n                setTitleText(SAMPLE_TITLE);\n                setListText(SAMPLE_DATA);\n              }}\n              disabled={!!listText}\n            >\n              <LightBulbOutlinedIcon />\n              Sample\n            </IconButton>\n          </Tooltip>\n        }\n      </ProfileCard>\n      <CancelButton\n        onClick={() => goBackOrHome(history)}\n      >\n        Back\n      </CancelButton>\n      <PrimaryButton\n        onClick={() => {\n          const list = listText.split('\\n').map((row) => {\n            const [name, image] = row.split(SEPARATOR);\n            return { name, image };\n          }).filter(({ name, image }) => name || image);\n          console.log(list);\n          // TODO actual profile.\n          dispatch(addProfile(titleText, list));\n          // TODO push to next.\n          history.push(viewProfileList);\n        }}\n        disabled={!listText.trim() || !titleText.trim()}\n      >\n        Save\n      </PrimaryButton>\n    </ProfileContainer>\n  );\n}\n\nexport default EditProfileComponent;\n","import EditProfile from './EditProfileComponent';\n\nexport default EditProfile;\n","/**\n * From: https://material-ui.com/components/progress/\n *\n * And modified.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 15,\n    borderRadius: 10,\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 10,\n  },\n}))(LinearProgress);\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\n/**\n * Displays a chunky linear progress bar with `value/total (progress %)`.\n * @param {{\n  value: number,\n  total: number,\n  * }} props\n */\nfunction LinearProgressWithLabel(props) {\n  const classes = useStyles();\n  const { value, total } = props;\n  const progress = value / total * 100;\n  return (\n    <Box display=\"flex\" alignItems=\"center\" className={classes.root}>\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress\n          variant=\"determinate\"\n          {...props}\n          value={progress}\n          height={40}\n        />\n      </Box>\n      <Box>\n        <Typography variant=\"body2\">\n          {`${value}/${total}`}&nbsp;\n          {`(${Math.round(progress)}%)`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  value: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default LinearProgressWithLabel;\n\n","import LinearProgressBarComponent from './LinearProgressBarComponent';\n\nexport default LinearProgressBarComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardActionArea,\n  CardMedia,\n  Typography,\n} from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst imgHeight = 250;\nconst minHeight = imgHeight + 80;\nconst BallotCard = styled(Card)`\n  display: flex;\n  min-height: ${minHeight}px;\n  min-width: ${minHeight}px;\n  border-radius: .5rem;\n\n  h2 {\n    padding: 0 1rem;\n    overflow: ellipsis;\n  }\n`;\n\n/**\n * Creates a single ballot image card.\n * If there's no image, it'll just render the text is squarish card.\n *\n * @param {{\n  img: null|string,\n  title: string,\n  onClick: Function\n  * }} param0\n */\nfunction BallotCardComponent({ img, title, onClick }) {\n  return (\n    <BallotCard raised={true}>\n      <CardActionArea onClick={onClick}>\n        {\n          img &&\n          <CardMedia\n            component=\"img\"\n            alt={title}\n            height={imgHeight}\n            image={img}\n            title={title}\n          />\n        }\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n      </CardActionArea>\n    </BallotCard>\n  );\n}\n\nBallotCardComponent.propTypes = {\n  img: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default BallotCardComponent;\n","import BallotCardComponent from './BallotCardComponent';\n\nexport default BallotCardComponent;\n","import styled from 'styled-components';\nimport { breakPoint } from 'components/common/common.style';\n\n// TODO RESPONSIVE\nexport const PairContainer = styled.div`\n  display: flex;\n  align-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n`;\n\nexport const BallotBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-top: 2rem;\n\n  > * {\n    max-width: 45%;\n    flex-grow: 1;\n  }\n\n  ${breakPoint.mediumAndSmaller} {\n    flex-direction: column;\n    > * {\n      max-width: unset;\n      width: 100%;\n    }\n  }\n`;\n\nexport const OrText = styled.div`\n  margin: 1rem;\n  flex-grow: unset;\n`;\n\nexport const SkippedText = styled.div`\n  margin-top: 1rem;\n  font-size: 1rem;\n  color: rgba(255, 255, 255, 0.7);\n`;\n","import React from 'react';\nimport { goBackOrHome } from 'app/routes';\nimport {\n  OptionalButton,\n  CancelButton\n} from 'components/common/common.style';\nimport LinearProgressBar from 'components/common/LinearProgressBar';\nimport BallotCard from './BallotCard';\nimport {\n  BallotBox,\n  PairContainer,\n  OrText,\n  SkippedText,\n} from './PairVote.style';\n\nconst flipCoin = () => Math.round(Math.random() * 2) % 2;\n// TODO replace with actual code that fetches the Card info.\n/**\n * @return {{id: string, image: string | null, title: string}}\n */\nconst generateCard = () => {\n  const text = 'Foobar ' + Math.round(Math.random() * 10);\n  return {\n    img: flipCoin() ? 'https://material-ui.com/static/images/cards/contemplative-reptile.jpg' : null,\n    title: text,\n    id: text,\n  };\n};\n\n/**\n * Silly easter egg.\n */\nconst orClickThreshold = 20;\n\nfunction PairVoteComponent({ history }) {\n  // TODO move to the application state.\n  const [orClickCount, setOrClickCount] = React.useState(0);\n  const [skippedTimes, setSkippedTimes] = React.useState(0);\n  const [progress, setProgress] = React.useState(0);\n  const [ballotValues, setBallotValues] = React.useState([\n    generateCard(),\n    generateCard()\n  ]);\n\n  const skippedPhrase = skippedTimes === 1 ?\n    `1 time` : `${skippedTimes} times`;\n\n  const totalComparisons = 200;\n\n  const castTheVote = id => {\n    setProgress(progress + 1);\n    setBallotValues([\n      generateCard(),\n      generateCard()\n    ]);\n    setOrClickCount(0);\n    console.log(`Voted for: ${id}`);\n  };\n\n  return (\n    <PairContainer>\n      <LinearProgressBar value={progress} total={totalComparisons} />\n      <BallotBox>\n        <BallotCard\n          img={ballotValues[0].img}\n          title={ballotValues[0].title}\n          onClick={() => castTheVote(ballotValues[0].id)}\n        />\n        <OrText onClick={() => {\n          setOrClickCount(orClickCount + 1);\n          if (orClickCount && orClickCount % orClickThreshold === 0) {\n            alert(`You chose \"OR\", very funny!`);\n          }\n        }}>\n          OR\n        </OrText>\n        <BallotCard\n          img={ballotValues[1].img}\n          title={ballotValues[1].title}\n          onClick={() => castTheVote(ballotValues[1].id)}\n        />\n      </BallotBox>\n      <SkippedText>Skipped: {skippedPhrase}</SkippedText>\n      <OptionalButton\n        onClick={() => {\n          setBallotValues([\n            generateCard(),\n            generateCard()\n          ]);\n          setSkippedTimes(skippedTimes + 1);\n        }}\n      >\n        Skip\n      </OptionalButton>\n      <CancelButton\n        onClick={() => goBackOrHome(history)}\n      >\n        Back\n      </CancelButton>\n    </PairContainer>\n  );\n}\n\nexport default PairVoteComponent;\n","import PairVoteComponent from './PairVoteComponent';\n\nexport default PairVoteComponent;\n","import styled from 'styled-components';\nimport { breakPoint } from 'components/common/common.style';\n\nexport const ListContainer = styled.div`\n  display: flex;\n  align-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0;\n  width: 80%;\n  max-width: 100%;\n\n  ${breakPoint.mediumAndSmaller} {\n    width: 100%;\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  margin: 1rem 0;\n`;\n","/**\n * Modified from: https://material-ui.com/components/tables/#sorting-amp-selecting\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Checkbox,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n} from '@material-ui/core';\n\n/**\n *\n * @param {{\n    headCells: [TableData]\n    classes: object\n    onSelectAllClick: Function,\n    order: string,\n    orderBy: string,\n    numSelected: number,\n    rowCount: number\n    onRequestSort: Function\n  }} props\n */\nconst EnhancedTableHead = (props) => {\n  const {\n    headCells,\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all items' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {\n              headCell.sortable ?\n                (<TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : 'asc'}\n                  onClick={createSortHandler(headCell.id)}\n                >\n                  {headCell.label}\n                  {orderBy === headCell.id ? (\n                    <span className={classes.visuallyHidden}>\n                      {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                    </span>\n                  ) : null}\n                </TableSortLabel>) :\n                headCell.label\n            }\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nEnhancedTableHead.propTypes = {\n  headCells: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    numeric: PropTypes.bool.isRequired,\n    disablePadding: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    sortable: PropTypes.bool.isRequired,\n  })),\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","/**\n * Modified from: https://material-ui.com/components/tables/#sorting-amp-selecting\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  IconButton,\n  TextField,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport {\n  ImportExport as ImportExportIcon,\n  Delete as DeleteIcon,\n  Done as DoneIcon,\n  Edit as EditIcon,\n} from '@material-ui/icons';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight: {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n    // TODO reduce to 3 when COMING SOON is removed.\n    paddingLeft: theme.spacing(23),\n    paddingRight: theme.spacing(1),\n  },\n  title: {\n    flex: '1 1 100%',\n    flexDirection: 'column'\n  },\n  input: {\n    margin: '0 1rem'\n  }\n}));\n\n/**\n * Creates title of the table OR the toolbar when in select mode.\n * Select mode is incomplete atm.\n *\n * @param {{\n  *  numSelected: number,\n  *  title: string,\n  *  rankRange: {start, end},\n  *  onRankRangeChange: Function,\n  * }} props\n  */\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { title, numSelected, rankRange, onRankRangeChange } = props;\n\n  const editButtonText = \"Edit Ranges\";\n  const doneButtonText = \"Done\";\n\n  const isSelectMode = numSelected > 0;\n  const [isEditMode, setIsEditMode] = React.useState(false);\n\n  /**\n   * Creates a lambda for the onChange event.\n   * Includes safety for preventing letter inputs\n   * (firefox will set the value as blank even with type number).\n   *\n   * @param {{start: boolean, end: boolean}} param0\n   */\n  const createChangeHandler = ({ start, end }) => (event) => {\n    const value = event.target.value\n    if (isNaN(value) || value === \"\") {\n      return;\n    }\n    onRankRangeChange({\n      start: Number(start === true ? value : rankRange.start),\n      end: Number(end === true ? value : rankRange.end),\n    });\n  };\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: isSelectMode,\n      })}\n    >\n      {isSelectMode ? (\n        <>\n          <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n            {numSelected} selected\n          </Typography>\n          <Tooltip title=\"Coming soon!\">\n            <IconButton aria-label=\"Coming soon!\">\n              COMING SOON!\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Export coming soon\">\n            <IconButton aria-label=\"Export coming soon\">\n              <ImportExportIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Clear coming soon\">\n            <IconButton aria-label=\"Clear coming soon\">\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </>\n      ) : (\n          isEditMode ? (\n            <>\n              <div className={classes.title}>\n                <TextField\n                  id=\"start-range\"\n                  className={classes.input}\n                  label=\"Rank Start\"\n                  type=\"number\"\n                  defaultValue={rankRange.start}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={createChangeHandler({ start: true })}\n                />\n                <TextField\n                  id=\"end-range\"\n                  className={classes.input}\n                  label=\"Rank End\"\n                  type=\"number\"\n                  defaultValue={rankRange.end}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={createChangeHandler({ end: true })}\n                />\n              </div>\n              <Tooltip title={doneButtonText}>\n                <IconButton\n                  aria-label={doneButtonText}\n                  onClick={() => setIsEditMode(false)}\n                >\n                  <DoneIcon />\n                </IconButton>\n              </Tooltip>\n            </>\n          ) :\n            (\n              <>\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                  {title}\n                </Typography>\n                <Tooltip title={editButtonText}>\n                  <IconButton\n                    aria-label={editButtonText}\n                    onClick={() => setIsEditMode(true)}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                </Tooltip>\n              </>\n            )\n        )\n      }\n    </Toolbar >\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  rankRange: PropTypes.shape({\n    start: PropTypes.number.isRequired,\n    end: PropTypes.number.isRequired\n  }),\n  onRankRangeChange: PropTypes.func.isRequired\n};\n\nexport default EnhancedTableToolbar;\n","import styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    minHeight: 200,\n    maxHeight: 440,\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n    borderRadius: '1rem'\n  },\n  table: {\n    minWidth: 200,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport const RowImage = styled.img`\n  width: 100%;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Checkbox,\n  TableCell,\n  TableRow,\n} from '@material-ui/core';\nimport {\n  RowImage,\n} from './ResultTable.style';\n\n\nconst ResultTableCellComponent = ({\n  headCell,\n  row,\n  labelId,\n  rank\n}) => {\n  const outRow = { ...row, rank };\n  const { id, numeric } = headCell;\n  const isName = id === 'name';\n  const isImg = id === 'image';\n  // We want name to be the field to grow.\n  const width = isName ? null :\n    (isImg ? 100 : 30);\n\n  return (\n    <TableCell\n      align={numeric ? 'right' : 'left'}\n      id={isName ? labelId : null}\n      component={isName ? 'th' : null}\n      scope={isName ? 'row' : null}\n      width={width}\n    >\n      {\n        isImg ?\n          (outRow.image && <RowImage\n            src={outRow.image}\n            alt={outRow.name}\n          />) :\n          outRow[id]\n      }\n    </TableCell>\n  );\n};\n\nResultTableCellComponent.propTypes = {\n  headCell: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    numeric: PropTypes.bool.isRequired,\n    disablePadding: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n  }),\n  row: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n  }),\n  labelId: PropTypes.string.isRequired,\n  rank: PropTypes.string.isRequired,\n};\n\n/**\n * Renders each row of the result table; deciding values and layout.\n *\n * @param {{\n *  headCells: [TableData],\n *  row: string,\n *  labelId: string,\n *  isItemSelected: boolean,\n *  handleClick: Function,\n *  maxScore: number,\n *  rankRange: {start, end}\n * }} props\n */\nconst ResultTableRowComponent = ({\n  headCells,\n  row,\n  labelId,\n  isItemSelected,\n  handleClick,\n  maxScore,\n  rankRange\n}) => {\n  const rankOffset = rankRange.start;\n  const rankValueRange = rankRange.end - rankRange.start;\n  const scorePercent = row.score / maxScore || 0;\n  const rank = rankValueRange * scorePercent + rankOffset;\n  const fixedDecimal = 2;\n  const rankRounded = Math.round((rank + Number.EPSILON) * 100) / 100;\n  return (\n    <TableRow\n      hover\n      onClick={(event) => handleClick(event, row.name)}\n      role=\"checkbox\"\n      aria-checked={isItemSelected}\n      tabIndex={-1}\n      key={row.name}\n      selected={isItemSelected}\n    >\n      <TableCell padding=\"checkbox\">\n        <Checkbox\n          checked={isItemSelected}\n          inputProps={{ 'aria-labelledby': labelId }}\n        />\n      </TableCell>\n      {headCells.map((headCell) => (\n        <ResultTableCellComponent\n          key={`${headCell.id}-${row.name}`}\n          headCell={headCell}\n          row={row}\n          labelId={labelId}\n          rank={rankRounded.toFixed(fixedDecimal)}\n        />\n      ))}\n    </TableRow>\n  );\n};\n\nResultTableRowComponent.propTypes = {\n  headCells: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    numeric: PropTypes.bool.isRequired,\n    disablePadding: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n  })),\n  row: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n  }),\n  labelId: PropTypes.string.isRequired,\n  isItemSelected: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  maxScore: PropTypes.number.isRequired,\n  rankRange: PropTypes.shape({\n    start: PropTypes.number.isRequired,\n    end: PropTypes.number.isRequired\n  })\n};\n\nexport default ResultTableRowComponent;\n","/**\n * Modified from: https://material-ui.com/components/tables/#sorting-amp-selecting\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableContainer,\n  TablePagination,\n} from '@material-ui/core';\nimport EnhancedTableHead from './EnhancedTableHeadComponent';\nimport EnhancedTableToolbar from './EnhancedTableToolbarComponent';\nimport ResultTableRow from './ResultTableRowComponent';\nimport {\n  useStyles,\n} from './ResultTable.style';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n/**\n * Expected structure of the table data.\n * @typedef {{\n  * id: string,\n  * rank: number,\n  * name: string,\n  * image: string,\n  * score: number }} TableData\n  */\n\n/**\n * Helps define data structure.\n *\n * @param {string} name\n * @param {string} image\n * @param {number} score\n * @param {string} id Will be used later when actions are added.\n * @return {TableData}\n */\nexport function createRowData(name, image, score, id = '') {\n  return { id, name, image, score };\n}\n\n/**\n * Correlates to `createRowData()`.\n * Ranks is calculated later.\n */\nconst headCells = [\n  { id: 'score', numeric: true, disablePadding: true, label: 'Score', sortable: true },\n  { id: 'image', numeric: false, disablePadding: false, label: 'Image', sortable: false },\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name', sortable: true },\n  { id: 'rank', numeric: true, disablePadding: false, label: 'Rank', sortable: false },\n];\n\nconst rowsPerPageOptions = [10, 25, 100, 1000];\nconst defaultRowsPerPage = 100;\n\n/**\n * Creates the enhanced table with sortable headers, defined order,\n * and selectable rows.\n *\n * @param {{\n *  title: string,\n *  headCells: [TableData],\n *  defaultOrder: string,\n *  defaultOrderBy: string,\n *  maxScore: number\n * }} props\n */\nexport default function EnhancedTable(props) {\n  const {\n    title,\n    rows,\n    defaultOrderBy,\n    defaultOrder,\n    maxScore\n  } = props;\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(defaultOrder);\n  const [orderBy, setOrderBy] = React.useState(defaultOrderBy);\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(defaultRowsPerPage);\n  const [rankStart, setRankStart] = React.useState(1);\n  const [rankEnd, setRankEnd] = React.useState(10);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          title={title}\n          numSelected={selected.length}\n          rankRange={{ start: rankStart, end: rankEnd }}\n          onRankRangeChange={({ start, end }) => {\n            setRankStart(start);\n            setRankEnd(end);\n          }}\n        />\n        <TableContainer className={classes.container}>\n          <Table\n            stickyHeader\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              headCells={headCells}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <ResultTableRow\n                      key={labelId}\n                      headCells={headCells}\n                      row={row}\n                      labelId={labelId}\n                      isItemSelected={isItemSelected}\n                      handleClick={handleClick}\n                      maxScore={maxScore}\n                      rankRange={{ start: rankStart, end: rankEnd }}\n                    />\n                  );\n                })}\n\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={rowsPerPageOptions}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n\n    </div >\n  );\n}\n\nEnhancedTable.propTypes = {\n  rows: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n  })),\n  maxScore: PropTypes.number.isRequired,\n  defaultOrder: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  defaultOrderBy: PropTypes.oneOf([\n    'name', 'score'\n  ]).isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import ResultTableComponent from './ResultTableComponent.js';\n\nexport default ResultTableComponent;\n","import React from 'react';\nimport {\n  ProfileContext,\n  getCurrentProfile,\n  getProgress,\n  getTotalComparisons\n} from 'contexts/Profile';\nimport { selectProfileRoute, voteOnPairs } from 'app/routes';\nimport {\n  PrimaryButton,\n  CancelButton\n} from 'components/common/common.style';\nimport LinearProgressBar from 'components/common/LinearProgressBar';\nimport {\n  ListContainer,\n  ProgressContainer,\n} from './ViewList.style';\nimport ResultTable from './ResultTable'\n\n// TODO replace with real data.\nconst maxScore = 9877;\n\nconst defaultOrderBy = 'score';\nconst defaultOrder = 'desc';\n\nconst resultsStartTitle = ': Ready to start!';\nconst resultsPartial = '(Partial)';\nconst resultsFinal = '(Results)';\n\nfunction ViewListComponent({ history }) {\n  // TODO move to the application state.\n  const { state } = React.useContext(ProfileContext);\n  const profile = getCurrentProfile(state);\n  const progress = getProgress(state);\n  const totalComparisons = getTotalComparisons(state);\n\n  const resultsTitleSuffix = progress ?\n    (progress >= totalComparisons ? resultsFinal : resultsPartial) :\n    resultsStartTitle;\n  const resultsTitle = `${profile.name} ${resultsTitleSuffix}`;\n\n  return (\n    <ListContainer>\n      <ProgressContainer>\n        <LinearProgressBar\n          value={progress}\n          total={totalComparisons}\n        />\n        {\n          (progress < totalComparisons) &&\n          (<PrimaryButton\n            onClick={() => history.push(voteOnPairs)}\n          >\n            {progress ? 'Continue' : 'Start'}\n          </PrimaryButton>)\n        }\n\n      </ProgressContainer>\n\n      <ResultTable\n        rows={profile.list}\n        maxScore={maxScore}\n        defaultOrderBy={defaultOrderBy}\n        defaultOrder={defaultOrder}\n        title={resultsTitle}\n      />\n      <CancelButton\n        onClick={() => history.replace(selectProfileRoute)}\n      >\n        Switch Profiles\n      </CancelButton>\n    </ListContainer>\n  );\n}\n\nexport default ViewListComponent;\n","import ViewListComponent from './ViewListComponent';\n\nexport default ViewListComponent;\n","import SelectProfile from 'components/SelectProfile';\nimport EditProfile from 'components/EditProfile';\nimport PairVote from 'components/PairVote';\nimport ViewList from 'components/ViewList';\n\n/**\n * See: react-router-dom\n * @typedef {{\n *  goBack: Function, replace: Function\n * }} history\n */\n\nexport const selectProfileRoute = '/';\nexport const editProfileRoute = '/edit-profile';\nexport const viewProfileList = '/list';\nexport const voteOnPairs = '/vote-pair';\nexport const homeRoute = selectProfileRoute;\n\n/**\n * @param {string} path\n * @param {JSX.Element} component\n * @return {{path: string, component: JSX.Element}}\n */\nconst routeComponent = (path, component) => ({ path, component });\n\n/**\n * Array of routes to their components.\n * (Array to guarantee order).\n */\nexport const routeList = [\n  routeComponent(voteOnPairs, PairVote),\n  routeComponent(viewProfileList, ViewList),\n  routeComponent(editProfileRoute, EditProfile),\n  routeComponent(selectProfileRoute, SelectProfile),\n];\n\n/**\n * Way to safely go back, regardless of where you start.\n *\n * @param {history} history\n */\nexport const goBackOrHome = (history) => {\n  if (history.length > 1) {\n    history.goBack();\n  } else {\n    history.replace(homeRoute);\n  }\n};\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { } from 'react-transition-group';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport { routeList } from './routes';\nimport { AppTheme } from 'components/common/common.style';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"app\">\n        <div className=\"app-body\">\n          <ThemeProvider theme={AppTheme}>\n            <Router basename={process.env.PUBLIC_URL}>\n              <Switch>\n                {\n                  routeList.map(({ path, component }) => (\n                    <Route key={path} path={path} component={component} />\n                  ))\n                }\n              </Switch>\n            </Router>\n          </ThemeProvider>\n        </div>\n      </div>\n      <div className=\"build-info\">\n        Release: {process.env.BUILD_INFO}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nexport const AppContext = React.createContext();\n\n// TODO clean up the profile vs. Profile.js\nconst PROFILE_ADD = 'PROFILE/ADD';\nconst PROFILE_SET_CURRENT = 'PROFILE/SET_CURRENT';\n\n/**\n * React reducer action.\n * @typedef {{\n *  type: string, data: any\n * }} Action\n */\n\n/**\n * Dispatch action.\n *\n * @param {string} key\n * @return {Action}\n */\nexport const setCurrentProfile = (key) => ({\n  type: PROFILE_ADD,\n  data: key\n});\n\n/**\n * Dispatch action.\n *\n * @param {string} name\n * @param {string} key\n * @return {Action}\n */\nexport const addProfile = (name, key) => ({\n  type: PROFILE_ADD,\n  data: {\n    name,\n    key\n  }\n});\n\n/**\n * Base store.\n * @typedef {{\n  currentProfile: null,\n  profiles: {{name: string, key: string}}\n  * }} BaseState\n  */\nconst initialState = {\n  currentProfileKey: null,\n  profiles: []\n};\n\n\n/**\n *\n * @param {initialState} state\n * @param {Action} action\n * @return {initialState}\n */\nfunction reducer(state, action) {\n  switch (action.type) {\n    case PROFILE_ADD:\n      return {\n        ...state,\n        profiles: [...state.profiles, action.data]\n      };\n    case PROFILE_SET_CURRENT:\n      return {\n        ...state,\n        currentProfileKey: action.data\n      };\n    default:\n      return state;\n  }\n}\n\n/**\n * @returns {{ state: initialState, dispatch: (Action) => {}}}\n */\nexport function AppProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <AppContext.Provider value={value}>\n      {props.children}\n    </AppContext.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './app/reportWebVitals';\nimport { AppProvider } from './contexts/App';\nimport { ProfileProvider } from './contexts/Profile';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <ProfileProvider>\n        <App />\n      </ProfileProvider>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}